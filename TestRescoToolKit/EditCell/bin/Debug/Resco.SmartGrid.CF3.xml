<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Resco.SmartGrid.CF3</name>
    </assembly>
    <members>
        <member name="T:Resco.Controls.SmartGrid.GradientColor">
            <summary>
            Represents a gradient color.
            </summary>
        </member>
        <member name="M:Resco.Controls.SmartGrid.GradientColor.#ctor">
            <summary>
            Initializes a new instance of the GradientColor class. 
            </summary>
        </member>
        <member name="M:Resco.Controls.SmartGrid.GradientColor.#ctor(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the Control class.
            </summary>
            <param name="startColor">Start color.</param>
            <param name="endColor">End color.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.GradientColor.#ctor(System.Drawing.Color,System.Drawing.Color,Resco.Controls.SmartGrid.FillDirection)">
            <summary>
            Initializes a new instance of the Control class.
            </summary>
            <param name="startColor">Start color.</param>
            <param name="endColor">End color.</param>
            <param name="fillDirection">Fill direction.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.GradientColor.DrawGradient(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the gradient at the specified rectangle to the specified graphics. 
            </summary>
            <param name="gr">Graphics to be gradient drawn.</param>
            <param name="rc">Rectangle to be gradient drawn.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.GradientColor.DrawVistaGradient(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the vista gradient at the specified rectangle to the specified graphics.
            </summary>
            <param name="gr">Graphics to be gradient drawn.</param>
            <param name="rc">Rectangle to be gradient drawn.</param>
            <remarks><b>DrawVistaGradient</b> will use StartColor only to draw gradient.</remarks>
        </member>
        <member name="M:Resco.Controls.SmartGrid.GradientColor.ShouldSerializeStartColor">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.SmartGrid.GradientColor.StartColor"/> property should be persisted. 
            </summary>
            <returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.</returns>	
        </member>
        <member name="M:Resco.Controls.SmartGrid.GradientColor.ShouldSerializeEndColor">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.SmartGrid.GradientColor.EndColor"/> property should be persisted. 
            </summary>
            <returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.</returns>	
        </member>
        <member name="M:Resco.Controls.SmartGrid.GradientColor.ShouldSerializeFillDirection">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.SmartGrid.GradientColor.FillDirection"/> property should be persisted. 
            </summary>
            <returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.</returns>	
        </member>
        <member name="M:Resco.Controls.SmartGrid.GradientColor.OnPropertyChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Resco.Controls.SmartGrid.GradientColor.PropertyChanged"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:Resco.Controls.SmartGrid.GradientColor.PropertyChanged">
            <summary>
            Notify the parent control when some property was changed.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.GradientColor.StartColor">
            <summary>
            Gets or sets the starting color of the gradient. 
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.GradientColor.EndColor">
            <summary>
            Gets or sets the ending color of the gradient. 
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.GradientColor.FillDirection">
            <summary>
            Gets or sets the direction of the gradient.
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.FillDirection">
            <summary>
            The direction of the gradient will fill.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.FillDirection.Horizontal">
            <summary>
            The fill goes horizontally.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.FillDirection.Vertical">
            <summary>
            The fill goes vertically. 
            </summary>
        </member>
        <member name="M:Resco.Controls.SmartGrid.GradientFill.GetAssemblyVersion">
            <summary>
            Gets the current application's or DLL's assembly version.
            </summary>
            <returns>Assembly version.</returns>
        </member>
        <member name="T:Resco.Controls.SmartGrid.Row">
            <summary>
            The Row class wraps the data displayed by the SmartGrid.
            </summary>
            <remarks>
            <p>Data in the Row can be accessed using field names or indexes. 
            Row can contain either bound or unbound data. Bound data are automatically accessed by the column names. 
            Unbound data can be accessed by names when <see cref="T:Resco.Controls.SmartGrid.Mapping"/> for the row is defined.
            </p>
            <p>To set the different data for the Row, use <see cref="P:Resco.Controls.SmartGrid.Cell.Data"/> property.</p>
            <p>The display height of the row is determined by the <see cref="P:Resco.Controls.SmartGrid.Row.Height"/> property. 
            To set the different height, use <see cref="M:Resco.Controls.SmartGrid.RowCollection.SetHeight(System.Int32,System.Int32)"/> method.</p>
            </remarks>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Row.BindTo(System.Object)">
            <summary>
            Creates new Row that is bound to given data.
            </summary>
            <param name="data">Any <see cref="T:System.Object"/> this row binds to.</param>
            <returns>Row bound to given <paramref name="data"/>.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Row.#ctor">
            <summary>
            Creates an empty row.
            </summary>
            <remarks>This version of constructor is for design-time purpose only and should be avoided.</remarks>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Row.#ctor(System.Int32,System.Collections.IList)">
            <summary>
            Creates the new row with given height.
            </summary>
            <remarks>This version of constructor is for design-time purpose only and should be avoided.</remarks>
            <param name="height">Height of the row.</param>
            <param name="list">List of data.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Row.#ctor(System.Int32)">
            <summary>
            Creates the unbound Row with the defined number of fields.
            </summary>
            <param name="count">The number of fields to create space for.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Row.#ctor(System.Collections.IList)">
            <summary>
            Creates the unbound Row wrapping the given list of data.
            </summary>
            <param name="list"><see cref="T:System.Collections.IList"/> containing the data for the row.</param>
            <example>The <paramref name="list"/> can be for example an array:
            <code lang="C#">    Row row = new Row( new string[] {text1, text2} );</code>
            <code lang="VB">
                Dim data() As String = {text1, text2}
                Dim row As New Row( data )
            </code>
            </example>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Row.#ctor(System.Collections.IList,Resco.Controls.SmartGrid.Mapping)">
            <summary>
            Creates new row using given list as a source of data and given mapping to name the fields.
            </summary>
            <param name="list"><see cref="T:System.Collections.IList"/> of data.</param>
            <param name="map"><see cref="T:Resco.Controls.SmartGrid.Mapping"/> defining field names for the Row.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Row.#ctor(Resco.Controls.SmartGrid.Mapping)">
            <summary>
            Creates new empty row with given field names.
            </summary>
            <param name="map"><see cref="T:Resco.Controls.SmartGrid.Mapping"/> defining field names for the Row.</param>
            <remarks><see cref="P:Resco.Controls.SmartGrid.Mapping.FieldCount"/> determines the number of field the row will contain.</remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Row.Data">
            <summary>
            Gets the data object from the row.
            </summary>
            <remarks>This method return data object, its type depends on your datasource.</remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Row.HeaderData">
            <summary>
            Gets the data object for header from the row.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Row.StringData">
            <summary>
            Gets or sets the string data as the data source for the row.
            </summary>
            <remarks>This property is used for design-time support and should not be used directly.</remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Row.Height">
            <summary>
            Gets or sets the Height of the row.
            </summary>
            <remarks>The SmartGrid does not reflect the change, if new height is set directly using this property.
            To change the height of the row with updating SmartGrid, use <see cref="M:Resco.Controls.SmartGrid.RowCollection.SetHeight(System.Int32,System.Int32)"/> method.</remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Row.IsHeader">
            <summary>
            Gets the boolean value indicating whether given row is column header row.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Row.Item(System.Int32)">
            <summary>
            Gets or sets the data in the field of the row given by its index.
            </summary>
            <param name="index">The index of the field.</param>
            <remarks>The SmartGrid does not reflect the change, if new data are set directly using this property.
            To change the data of the row with updating SmartGrid, use <see cref="P:Resco.Controls.SmartGrid.Cell.Data"/> property.</remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Row.Item(System.String)">
            <summary>
            Gets or sets the data in the field of the row given by its name.
            </summary>
            <param name="name">The <see cref="T:System.String"/> name of the field.</param>
            <remarks>The SmartGrid does not reflect the change, if new data are set directly using this property.
            To change the data of the row with updating SmartGrid, use <see cref="P:Resco.Controls.SmartGrid.Cell.Data"/> property.</remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Row.Item(Resco.Controls.SmartGrid.Column)">
            <summary>
            Gets or sets the data in the field of the row given by the column's DataMember.
            </summary>
            <param name="column">The <see cref="T:Resco.Controls.SmartGrid.Column"/> of the SmartGrid determining the field in the Row.</param>
            <remarks>The SmartGrid does not reflect the change, if new data are set directly using this property.
            To change the data of the row with updating SmartGrid, use <see cref="P:Resco.Controls.SmartGrid.Cell.Data"/> property.</remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Row.Enabled">
            <summary>
            Gets or sets wheter the Row is enabled or not.
            </summary>
            <remarks>The SmartGrid does not reflect the change, if enabled is changed.
            To reflect this change, call <see cref="M:Resco.Controls.SmartGrid.SmartGrid.Refresh"/>.</remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Row.AutoSizeRowMode">
            <summary>
            Gets or sets a value indicating how row height is determined.
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.IDataConnector">
            <summary>
            Represents a connection to an enumerable data source.
            </summary>
            <remarks>IDataConnector is used to represent forward only readable source of data,
            e.g. taken from IDataReader, XMLReader or FileStream.</remarks>
        </member>
        <member name="M:Resco.Controls.SmartGrid.IDataConnector.Open">
            <summary>
            Opens the connection to datasource.
            </summary>
            <remarks>
            When the connection is open, position should be set before the first possible row of data.
            </remarks>
            <returns><c>true</c> when connection is open, otherwise <c>false</c></returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.IDataConnector.Close">
            <summary>
            Close the connection to datasource.
            </summary>
        </member>
        <member name="M:Resco.Controls.SmartGrid.IDataConnector.MoveNext">
            <summary>
            Advances the position to the next row of data.
            </summary>
            <remarks>MoveNext should be called after <see cref="M:Resco.Controls.SmartGrid.IDataConnector.Open"/> prior to accessing the <see cref="P:Resco.Controls.SmartGrid.IDataConnector.Current"/> data.</remarks>
            <returns><c>true</c> if the next row was loaded, otherwise <c>false</c></returns>
        </member>
        <member name="P:Resco.Controls.SmartGrid.IDataConnector.IsOpen">
            <summary>
            Gets the value indicating whether the connection is open.
            </summary>
            <value><c>true</c> when connection is open, otherwise <c>false</c></value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.IDataConnector.Current">
            <summary>
            Gets the current row of data.
            </summary>
            <remarks>
            Current data could be accessed multiple times until the call to a <see cref="M:Resco.Controls.SmartGrid.IDataConnector.MoveNext"/>
            </remarks>
            <value><see cref="T:System.Collections.IList"/> containing the data from the source.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.IDataConnector.Mapping">
            <summary>
            Gets the field mapping of the data.
            </summary>
            <value>The <see cref="P:Resco.Controls.SmartGrid.IDataConnector.Mapping"/> of the data.</value>
        </member>
        <member name="T:Resco.Controls.SmartGrid.DataConnector">
            <summary>
            Basic implementation of IDataConnector which connects to arbitrary database.
            </summary>
            <remarks>
            <p>The <see cref="P:Resco.Controls.SmartGrid.DataConnector.Command"/> property must be set prior to using the 
            <see cref="T:Resco.Controls.SmartGrid.DataConnector"/>.</p>
            <p>DataConnector loads the data from the database using given <see cref="T:System.Data.IDbCommand"/> to get
            <see cref="T:System.Data.IDataReader"/>. If no command is supplied (or created), the <see cref="M:Resco.Controls.SmartGrid.DataConnector.Open"/> method
            will return <c>false</c>.</p>
            <note type="Compact Framework">Current implementation of the DataConnector for 
            the Compact Framework supports CommandText and ConnectionString properties, which can be 
            set in the design time. When the <see cref="P:Resco.Controls.SmartGrid.DataConnector.Command"/> property is not set before setting 
            the CommandText and/or the ConnectionString or before accessing the <see cref="P:Resco.Controls.SmartGrid.DataConnector.Command"/> property,
             DataConnector will attempt to create new instance 
            of the <see cref="!:System.Data.SqlServerCe.SqlCeCommand"/> and 
            the <see cref="!:System.Data.SqlServerCe.SqlCeConnection"/>  from the assembly
            "System.Data.SqlServerCe, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=969db8053d3322ac".
            </note>
            </remarks>
        </member>
        <member name="M:Resco.Controls.SmartGrid.DataConnector.#ctor">
            <summary>
            Creates DataConnector.
            </summary>
        </member>
        <member name="M:Resco.Controls.SmartGrid.DataConnector.#ctor(System.Data.IDbCommand)">
            <summary>
            Creates DataConnector with the selected command.
            </summary>
        </member>
        <member name="M:Resco.Controls.SmartGrid.DataConnector.ToString">
            <summary>
            Returns a String that represents the current DataConnector.
            </summary>
            <returns>A String that represents the current DataConnector.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.DataConnector.ShouldSerializeSqlCeVersion">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.SmartGrid.DataConnector.SqlCeVersion"/> property should be persisted. 
            </summary>
            <returns><b>true</b> if the property value has changed from its default; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.DataConnector.Open">
            <summary>
            Opens the connection to datasource.
            </summary>
            <remarks>
            <p>When the connection is open, position is set before the first possible row of data.</p>
            <p>When <c>IDbConnector.Command.Connection.State</c> is <c>ConnectionState.Open</c>, the current
            open connection is reused. It will stay open after calling the <see cref="M:Resco.Controls.SmartGrid.DataConnector.Close"/> method.
            Otherwise new connection to database is made, which is then closed by 
            the <see cref="M:Resco.Controls.SmartGrid.DataConnector.Close"/> method.</p>
            <p>State of DataConnector is not the same as the state of the <c>Command.Connection</c>.
            When <c>Command.Connection</c> was open when calling <see cref="M:Resco.Controls.SmartGrid.DataConnector.Open"/> method, it will 
            stay open after calling the <see cref="M:Resco.Controls.SmartGrid.DataConnector.Close"/> method. Otherwise the 
            <c>Command.Connection</c> will be open/closed with the connector.</p>
            <note>It is required to call the <see cref="M:Resco.Controls.SmartGrid.DataConnector.Close"/> method 
            on the successfully opened connection.</note>
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when IsOpen is <c>true</c>.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when no command is set, or no connection for the command.</exception>
            <returns><c>true</c> when connection is open, otherwise <c>false</c></returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.DataConnector.Close">
            <summary>
            Close the connection to datasource.
            </summary>
            <remarks>
            <p>State of DataConnector is not the same as the state of the <c>Command.Connection</c>.
            When <c>Connector.Connection</c> was open when calling <see cref="M:Resco.Controls.SmartGrid.DataConnector.Open"/> method, it will 
            stay open after calling the <see cref="M:Resco.Controls.SmartGrid.DataConnector.Close"/> method. Otherwise the 
            <c>Command.Connection</c> will be open/closed with the connector.</p>
            </remarks>
        </member>
        <member name="M:Resco.Controls.SmartGrid.DataConnector.MoveNext">
            <summary>
            Advances the position to the next row of data.
            </summary>
            <remarks>MoveNext should be called after <see cref="M:Resco.Controls.SmartGrid.DataConnector.Open"/> prior to accessing the <see cref="P:Resco.Controls.SmartGrid.DataConnector.Current"/> data.</remarks>
            <returns><c>true</c> if the next row was loaded, otherwise <c>false</c></returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.DataConnector.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the DataConnector and optionally releases the managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.DataConnector.Dispose">
            <summary>
            Releases all resources used by the DataConnector.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.DataConnector.Command">
            <summary>
            Gets or sets the <see cref="T:System.Data.IDbCommand"/> used to retrieve data. 
            </summary>
            <remarks>
            <p>The <see cref="P:Resco.Controls.SmartGrid.DataConnector.Command"/> property must be set prior to using the 
            <see cref="T:Resco.Controls.SmartGrid.DataConnector"/>.</p>
            <note type="Compact Framework">In Compact Framework if the <see cref="P:Resco.Controls.SmartGrid.DataConnector.CommandText"/> or 
            the <see cref="P:Resco.Controls.SmartGrid.DataConnector.ConnectionString"/>  is set in designtime or <see cref="P:Resco.Controls.SmartGrid.DataConnector.Command"/> is 
            accessed in runtime and no command is supplied before, the new instance of the 
            <see cref="!:System.Data.SqlServerCe.SqlCeCommand"/> and the 
            <see cref="!:System.Data.SqlServerCe.SqlCeConnection"/> will be created.</note>
            </remarks>
            <example>
            <p>The following example shows the usage of the Command property 
            (we can replace the <see cref="!:System.Data.SqlServerCe.SqlCeCommand"/> with e.g. 
            <see cref="!:System.Data.SqlClient.SqlCommand"/>:</p>
            <sample name="SmartGrid.Load">
        <code lang="Visual Basic"><![CDATA[
Dim myCommand As New System.Data.SqlServerCe.SqlCeCommand("SELECT * FROM customers")
Dim myConnection As New System.Data.SqlServerCe.SqlCeConnection(_
    "DataSource = \\My Documents\\Northwind.sdf")

Private Sub Form1_Load(ByVal sender As Object, ByVal e As System.EventArgs)    Handles MyBase.Load
    Try
        ' set up the command for the DbConnector (not required, if set in designer)
        myCommand.Connection = myConnection
        SmartGrid1.DbConnector.Command = myCommand

        ' load the data
        SmartGrid1.LoadData(False)

    Catch ex As System.Data.SqlServerCe.SqlCeException
        MessageBox.Show(ex.Message)
    End Try
End Sub
            ]]></code>
        <code lang="C#"><![CDATA[
SqlCeCommand myCommand = new SqlCeCommand("SELECT * FROM customers");
SqlCeConnection myConnection = new SqlCeConnection("DataSource = \\My Documents\\Northwind.sdf");
    
private void Form1_Load(object sender, System.EventArgs e)
{
    try
    {
        // set up the command for the DbConnector (not required, if set in designer)
        myCommand.Connection = myConnection;
        smartGrid1.DbConnector.Command = myCommand;

        // load the data
        smartGrid1.LoadData(false);
    }
    catch(SqlCeException ex)
    {
        MessageBox.Show(ex.Message);
    }
}        
            ]]></code>
    </sample>
            </example>
            <value><see cref="T:System.Data.IDbCommand"/> used to retrieve data. Default value is <see langword="null"/></value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.DataConnector.CommandText">
            <summary>
            Gets or sets the command text.
            </summary>
            <remarks>
            <p>When no command is defined, this property has no effect, otherwise it is a shortcut property
            for access to the <see cref="P:System.Data.IDbCommand.CommandText"/> property of the <see cref="P:Resco.Controls.SmartGrid.DataConnector.Command"/>.</p>
            <note type="Compact Framework">This property is used in the design time for 
            the Compact Framework to set up the command text. If it is set in the runtime,
            and no command was supplied, then new instance of the 
            <see cref="!:System.Data.SqlServerCe.SqlCeCommand"/> and the 
            <see cref="!:System.Data.SqlServerCe.SqlCeConnection"/> is created.
            </note></remarks>
            <example>
            <code>SmartGrid1.DbConnector.CommandText = "SELECT * FROM customers" &amp; orderBy</code>
            </example>
            <value>The command text for the <see cref="P:Resco.Controls.SmartGrid.DataConnector.Command"/>, 
            default value is <see cref="F:System.String.Empty"/></value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.DataConnector.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <remarks>
            <p>When no command is defined, this property has no effect, otherwise it is a shortcut property
            for access to the <c>Connection.ConnectionString</c> property of the <see cref="P:Resco.Controls.SmartGrid.DataConnector.Command"/>.</p>
            <note type="Compact Framework">This property is used in the design time for 
            the Compact Framework to set up the connection string. If it is set in the runtime,
            and no command was supplied, then new instance of the 
            <see cref="!:System.Data.SqlServerCe.SqlCeCommand"/> and the 
            <see cref="!:System.Data.SqlServerCe.SqlCeConnection"/> is created.
            </note></remarks>
            <value>The connection string for the Connection of the <see cref="P:Resco.Controls.SmartGrid.DataConnector.Command"/>, 
            default value is <see cref="F:System.String.Empty"/></value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.DataConnector.IsOpen">
            <summary>
            Gets the value indicating whether the DataConnector is open.
            </summary>
            <remarks>
            <p>When DataConnector is open, it is required to call <see cref="M:Resco.Controls.SmartGrid.DataConnector.Close"/> method
            before another call to <see cref="M:Resco.Controls.SmartGrid.DataConnector.Open"/> method.</p>
            <p>State of DataConnector is not the same as the state of the <c>Command.Connection</c>.
            When <c>Connector.Connection</c> was open when calling <see cref="M:Resco.Controls.SmartGrid.DataConnector.Open"/> method, it will 
            stay open after calling the <see cref="M:Resco.Controls.SmartGrid.DataConnector.Close"/> method. Otherwise the 
            <c>Command.Connection</c> will be open/closed with the connector.</p>
            </remarks>
            <value><c>true</c> when connection is open, otherwise <c>false</c></value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.DataConnector.Current">
            <summary>
            Gets the current row of data.
            </summary>
            <remarks>
            Current data can be accessed multiple times until the call to a <see cref="M:Resco.Controls.SmartGrid.DataConnector.MoveNext"/> method.
            </remarks>
            <value><see cref="T:System.Collections.IList"/> containing the data from the source.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.DataConnector.Mapping">
            <summary>
            Gets the field mapping of the data.
            </summary>
            <value>The <see cref="P:Resco.Controls.SmartGrid.DataConnector.Mapping"/> of the data.</value>
        </member>
        <member name="T:Resco.Controls.SmartGrid.Mapping">
            <summary>
            Used as a map between column names and column indices.
            </summary>
            <remarks>The mapping is used by the <see cref="T:Resco.Controls.SmartGrid.Row"/> to determine the position
            of the field by name, not by the index. Mapping uses <see cref="T:System.Collections.Hashtable"/> as the
            underlying type for fast access to column indices. Once created, the mapping cannot be
            changed. When you load data from database, and you need some empty columns, create them 
            with the select command, e.g. <code>SELECT *, 0 as Flag FROM customers</code>.
            </remarks>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Mapping.#ctor">
            <summary>
            Creates empty mapping.
            </summary>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Mapping.#ctor(System.String[])">
            <summary>
            Creates the mapping from the array of field names.
            </summary>
            <param name="names">array of unique field names</param>
            <remarks>Use this constructor for known field names. 
            The order of names and their count cannot be changed.</remarks>
            <example>
            <code lang="VisualBasic">
            <![CDATA[ Dim names() As String = {"Id", "Name", "Value"}
            Dim map As New Mapping(names) ]]></code>
            <code lang="C#">
            <![CDATA[ Mapping map = new Mapping(new string[] {"Id", "Name", "Value"}); ]]>
            </code>
            </example>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Mapping.#ctor(System.Data.IDataRecord)">
            <summary>
            Creates the mapping from the data reader (or other IDataRecord).
            </summary>
            <param name="reader">Data reader or IDataRecord, must have unique field names</param>
            <remarks>Use this constructor when loading data from database with the 
            <see cref="T:System.Data.IDataReader"/>. The order of names and their count cannot be changed.</remarks>
            <example>
            <code lang="VisualBasic"><![CDATA[ Dim map As New Mapping(reader) ]]></code>
            <code lang="C#"><![CDATA[ Mapping map = new Mapping(reader); ]]>
            </code>
            </example>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Mapping.GetOrdinal(System.String)">
            <summary>
            Gets the ordinal of the named field.
            </summary>
            <param name="name">Name of the field</param>
            <returns>Ordinal of the field</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Mapping.GetName(System.Int32)">
            <summary>
            Gets the name of the field.
            </summary>
            <param name="i">Ordinal of the field</param>
            <returns>Name of the field</returns>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Mapping.Empty">
            <summary>
            Denotes the constant empty mapping.
            </summary>
            <value>Empty mapping.</value>
            <remarks>Use this property instead of null, can distinguish between mapped and 
            unmapped rows.</remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Mapping.FieldCount">
            <summary>
            Gets the number of fields.
            </summary>
            <value>The number of fields.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Mapping.Item(System.Int32)">
            <summary>
            Indexer, gets the name of the field.
            </summary>
            <exception cref="T:System.IndexOutOfRangeException">If the index is incorrect.</exception>
            <exception cref="T:System.NullReferenceException">If the mapping is empty mapping.</exception>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Mapping.Names">
            <summary>
            Gets the column names.
            </summary>
            <remarks>The returned array is a copy of internal array, the names can't be changed.</remarks>
        </member>
        <member name="T:Resco.Controls.SmartGrid.ColumnCollection">
            <summary>
            ColumnCollection contains the rows of the SmartGrid.
            </summary>
            <remarks>
            <p>The <see cref="P:Resco.Controls.SmartGrid.ColumnCollection.HeaderColumn"/> property gives access to row header column 
            (containing the pointer to active row).</p>
            <p>You can <see cref="M:Resco.Controls.SmartGrid.ColumnCollection.Add(Resco.Controls.SmartGrid.Column)"/> or <see cref="M:Resco.Controls.SmartGrid.ColumnCollection.Remove(Resco.Controls.SmartGrid.Column)"/> columns to or from collection.
            To get the index of the column, use <see cref="M:Resco.Controls.SmartGrid.ColumnCollection.IndexOf(Resco.Controls.SmartGrid.Column)"/> method.</p>
            </remarks>
        </member>
        <member name="M:Resco.Controls.SmartGrid.ColumnCollection.IndexOf(Resco.Controls.SmartGrid.Column)">
            <summary>
            Determines the index of a specific column in the ColumnCollection.
            </summary>
            <param name="column">The <see cref="T:Resco.Controls.SmartGrid.Column"/> to locate in the ColumnCollection.</param>
            <returns>The index of <paramref name="column"/> if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.ColumnCollection.Remove(Resco.Controls.SmartGrid.Column)">
            <summary>
            Removes the first occurrence of a specific column from the ColumnCollection.
            </summary>
            <param name="column"><see cref="T:Resco.Controls.SmartGrid.Column"/> to remove.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.ColumnCollection.Add(Resco.Controls.SmartGrid.Column)">
            <summary>
            Adds a column to the ColumnCollection.
            </summary>
            <param name="column"><see cref="T:Resco.Controls.SmartGrid.Column"/> to add.</param>
            <returns>The position into which the new column was inserted.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.ColumnCollection.Insert(System.Int32,Resco.Controls.SmartGrid.Column)">
            <summary>
            Inserts a column into the ColumnCollection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="column"/> should be inserted. </param>
            <param name="column">The <see cref="T:Resco.Controls.SmartGrid.Column"/> to insert.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.ColumnCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after inserting a new element into the CollectionBase instance.
            </summary>
            <remarks>Updates parent SmartGrid.</remarks>
            <param name="index">The zero-based index at which to insert value.</param>
            <param name="value">The new value of the element at index.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.ColumnCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            Performs additional custom processes after setting a value in the CollectionBase instance.
            </summary>
            <remarks>Updates parent SmartGrid.</remarks>
            <param name="index">The zero-based index at which <paramref name="oldValue"/> can be found.</param>
            <param name="oldValue">The value to replace with <paramref name="newValue"/>.</param>
            <param name="newValue">The new value of the element at <paramref name="index"/>.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.ColumnCollection.OnRemove(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes before removing an element from the CollectionBase instance.
            </summary>
            <param name="index">The zero-based index at which value can be found.</param>
            <param name="value">The value of the element to remove from index.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.ColumnCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after removing an element from the CollectionBase instance.
            </summary>
            <remarks>Updates parent SmartGrid.</remarks>
            <param name="index">The zero-based index at which value can be found.</param>
            <param name="value">The value of the element to remove from index.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.ColumnCollection.OnClear">
            <summary>
            Performs additional custom processes before clearing the contents of the CollectionBase instance.
            </summary>
        </member>
        <member name="M:Resco.Controls.SmartGrid.ColumnCollection.OnClearComplete">
            <summary>
            Performs additional custom processes after clearing the contents of the CollectionBase instance.
            </summary>
            <remarks>Updates parent SmartGrid.</remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.ColumnCollection.HeaderColumn">
            <summary>
            Gets the reference to the header column.
            </summary>
            <remarks>The header column is the one containing an active row pointer,. 
            Header column is displayed when <see cref="P:Resco.Controls.SmartGrid.SmartGrid.RowHeadersVisible"/> is set to true.
            The height of the header column is controled by the 
            <see cref="P:Resco.Controls.SmartGrid.SmartGrid.RowHeaderWidth"/> property.</remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.ColumnCollection.Item(System.Int32)">
            <summary>
            Gets the column at the specified index. 
            </summary>
            <param name="index">The zero-based index of the column to get.</param>
            <value>The column at the specified index.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.ColumnCollection.Item(System.String)">
            <summary>
            Gets the column with the specified <see cref="P:Resco.Controls.SmartGrid.Column.Name"/>. 
            </summary>
            <param name="name">The name of the <see cref="P:Resco.Controls.SmartGrid.Column.Name"/> of the column to get.</param>
            <value>The column of the specified name.</value>
        </member>
        <member name="T:Resco.Controls.SmartGrid.StyleCollection">
            <summary>
            StyleCollection contains the styles of the SmartGrid.
            </summary>
            <remarks>
            <p>Styles can be accessed by its name or index within the collection.</p>
            <p>You can <see cref="M:Resco.Controls.SmartGrid.StyleCollection.Add(Resco.Controls.SmartGrid.Style)"/> or <see cref="M:Resco.Controls.SmartGrid.StyleCollection.Remove(Resco.Controls.SmartGrid.Style)"/> styles to or from collection.
            To get the index of the style, use <see cref="M:Resco.Controls.SmartGrid.StyleCollection.IndexOf(System.String)"/> method.</p>
            </remarks>
        </member>
        <member name="M:Resco.Controls.SmartGrid.StyleCollection.Contains(System.String)">
            <summary>
            Determines whether style of given name is in the StyleCollection.
            </summary>
            <param name="styleName">Name of the style to locate.</param>
            <returns><c>true</c> if item is found in the StyleCollection; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.StyleCollection.IndexOf(System.String)">
            <summary>
            Determines the index of a specific style in the StyleCollection.
            </summary>
            <param name="styleName">The name of the style to locate in the StyleCollection.</param>
            <returns>The index of style if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.StyleCollection.IndexOf(Resco.Controls.SmartGrid.Style)">
            <summary>
            Determines the index of a specific style in the StyleCollection.
            </summary>
            <param name="style">The <see cref="T:Resco.Controls.SmartGrid.Style"/> to locate in the StyleCollection.</param>
            <returns>The index of <paramref name="style"/> if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.StyleCollection.Remove(Resco.Controls.SmartGrid.Style)">
            <summary>
            Removes the first occurrence of a specific style from the StyleCollection.
            </summary>
            <param name="style"><see cref="T:Resco.Controls.SmartGrid.Style"/> to remove.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.StyleCollection.Remove(System.String)">
            <summary>
            Removes the specific style from the StyleCollection.
            </summary>
            <param name="name">Name of the style to remove.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.StyleCollection.Add(Resco.Controls.SmartGrid.Style)">
            <summary>
            Adds a style to the RowCollection.
            </summary>
            <param name="style"><see cref="T:Resco.Controls.SmartGrid.Style"/> to add.</param>
            <returns>The position into which the new style was inserted.</returns>
            <exception cref="T:System.NullReferenceException">When <paramref name="style"/> is <see langref="null"/>.</exception>
            <exception cref="T:System.ArgumentException">When styles in style collection have duplicate names.</exception>
        </member>
        <member name="M:Resco.Controls.SmartGrid.StyleCollection.Insert(System.Int32,Resco.Controls.SmartGrid.Style)">
            <summary>
            Inserts a style into the StyleCollection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="style"/> should be inserted. </param>
            <param name="style">The <see cref="T:Resco.Controls.SmartGrid.Style"/> to insert.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.StyleCollection.OnClear">
            <summary>
            Performs additional custom processes before clearing the contents of the CollectionBase instance.
            </summary>
        </member>
        <member name="M:Resco.Controls.SmartGrid.StyleCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after inserting a new element into the CollectionBase instance.
            </summary>
            <param name="index">The zero-based index at which to insert value.</param>
            <param name="value">The new value of the element at index.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.StyleCollection.OnRemove(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes bedfore removing an element from the CollectionBase instance.
            </summary>
            <param name="index">The zero-based index at which value can be found.</param>
            <param name="value">The value of the element to remove from index.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.StyleCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            Performs additional custom processes after setting a value in the CollectionBase instance.
            </summary>
            <param name="index">The zero-based index at which <paramref name="oldValue"/> can be found.</param>
            <param name="oldValue">The value to replace with <paramref name="newValue"/>.</param>
            <param name="newValue">The new value of the element at <paramref name="index"/>.</param>
        </member>
        <member name="P:Resco.Controls.SmartGrid.StyleCollection.Item(System.Int32)">
            <summary>
            Gets or sets the style at the specified index. 
            </summary>
            <param name="index">The zero-based index of the style to get or set.</param>
            <value>The style at the specified index.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.StyleCollection.Item(System.String)">
            <summary>
            Gets or sets the style with the specified name. 
            </summary>
            <param name="name">Name of the style to get or set.</param>
            <value>The style with the specified name or <see langref="null"/> if style with given name does not exist.</value>
        </member>
        <member name="T:Resco.Controls.SmartGrid.CellCollection">
            <summary>
            Class responsible for caching of drawn cells and their (re)drawing.
            </summary>
            <remarks>CellCollection caches the cell layout while they are displayed.</remarks>
        </member>
        <member name="M:Resco.Controls.SmartGrid.CellCollection.CreateListOfVisibleRows(System.Collections.Generic.List{Resco.Controls.SmartGrid.CellCollection.RowWithIndex},Resco.Controls.SmartGrid.RowCollection,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Fills the output list with the selected elements of data list in given range.
            </summary>
            <remarks>All elements of input data list should implement <see cref="!:IWidth"/> interface.</remarks>
            <param name="list">Output list.</param>
            <param name="rows">Input row collection.</param>
            <param name="docked">Docked element index.</param>
            <param name="nTopMostRowIndex">Index of the topmost visible undocked row.</param>
            <param name="offsety">Initial vertical offset.</param>
            <param name="height">Maximum height.</param>
            <returns>Final horizontal/vertical offset.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.CellCollection.GetCellAtPoint(System.Int32,System.Int32)">
            <summary>
            Gets the cell displayed at a point given by its relative coordinates.
            </summary>
            <param name="x">Coordinate x of the point relative to SmartGrid's topleft point.</param>
            <param name="y">Coordinate y of the point relative to SmartGrid's topleft point.</param>
            <returns>The <see cref="T:Resco.Controls.SmartGrid.Cell"/> displayed at the given coordinates 
            or <see langref="null"/> if no cell is displayed there.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.CellCollection.GetCell(System.Int32,System.Int32)">
            <summary>
            Gets a cell from specified indices.
            </summary>
            <param name="x">x coordinate from m_Cells array</param>
            <param name="y">y coordinate from m_Cells array</param>
            <returns>Cell reference that corresponds to the input coordinates.</returns>
        </member>
        <member name="P:Resco.Controls.SmartGrid.CellCollection.Item(System.Int32,System.Int32)">
            <summary>
            Gets the cell at the given row and column indexes.
            </summary>
            <remarks><p>The cell returned by this property is either displayed one, or only a virtual
            cell when real cell is scrolled out of the view.</p></remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.CellCollection.FirstVisibleRowIndex">
            <summary>
            Returns an index of the first visible undocked row
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.ToolTip">
            <summary>
            Summary description for ToolTip.
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.ImageCache">
            <summary>
            Summary description for ImageCache.
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.Cell">
            <summary>
            The <c>Cell</c> class gives access to the currently drawn grid cells.
            </summary>
            <remarks>
            <p>Cells are created while caching on-screen layout of the grid. 
            You can get access to the Cells using <see cref="P:Resco.Controls.SmartGrid.SmartGrid.Cells"/> property.</p>
            <p></p>
            </remarks>
        </member>
        <member name="F:Resco.Controls.SmartGrid.Cell.Parent">
            <summary>
            The reference to the <see cref="T:Resco.Controls.SmartGrid.SmartGrid"/> displaying the <c>Cell</c>.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.Cell.RowIndex">
            <summary>
            Index of the row.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.Cell.ColumnIndex">
            <summary>
            Index of the column.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.Cell.Column">
            <summary>
            <see cref="F:Resco.Controls.SmartGrid.Cell.Column"/> to which the cell is belonging.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.Cell.Row">
            <summary>
            <see cref="F:Resco.Controls.SmartGrid.Cell.Row"/> to which the cell is belonging.
            </summary>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Cell.#ctor(Resco.Controls.SmartGrid.SmartGrid,System.Int32,System.Int32)">
            <summary>
            The cell is in edit mode
            </summary>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Cell.Draw(System.Drawing.Graphics)">
            <summary>
            Draws the cell contents on the specified Graphics object.
            </summary>
            <param name="gr">Graphics onto the contents of the cell are drawn.</param>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Cell.IsInEditMode">
            <summary>
            Returns true, if this cell is currently being edited; false otherwise.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Cell.X">
            <summary>
            Get the X coordinate of the upper left corner of the cell.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Cell.Y">
            <summary>
            Get the Y coordinate of the upper left corner of the cell.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Cell.Alternating">
            <summary>
            Get the boolean value indicating, whether cell is in alternating row.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Cell.Header">
            <summary>
            Get the boolean value indicating, whether cell is in header row or column.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Cell.Selected">
            <summary>
            Get or set the boolean value indicating, whether cell is selected.
            </summary>
            <remarks>The cell can be selected through this property only if it is displayed on the screen. 
            If the cell is scrolled away, the selection dissappears. 
            To pernamently select cell, you must activate it by calling <see cref="M:Resco.Controls.SmartGrid.SmartGrid.ActivateCell(System.Int32,System.Int32)"/> method.</remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Cell.Width">
            <summary>
            Gets the width of the cell.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Cell.Height">
            <summary>
            Gets the height of the cell.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Cell.Image">
            <summary>
            Gets or sets the <see cref="P:Resco.Controls.SmartGrid.Cell.Image"/> for the cell to display.
            </summary>
            <remarks><c>Image</c> property can be set only for <see cref="T:Resco.Controls.SmartGrid.CustomCell"/>.</remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Cell.Data">
            <summary>
            Gets or sets the data displayed by the cell.
            </summary>
            <remarks>Setting data through this property will also 
            invalidate the cells layout forcing it to redraw itself.</remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Cell.Text">
            <summary>
            Gets or sets the text displayed by the cell.
            </summary>
            <remarks><c>Text</c> property can be set only for <see cref="T:Resco.Controls.SmartGrid.CustomCell"/>.</remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Cell.Style">
            <summary>
            Gets or sets the <see cref="T:Resco.Controls.SmartGrid.Style"/> used to display the cell.
            </summary>
            <remarks><c>Style</c> property can be set only for <see cref="T:Resco.Controls.SmartGrid.CustomCell"/>.</remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Cell.Border">
            <summary>
            Gets or sets the value indicating the cell will draw inner border.
            </summary>
            <remarks>This property should be set <see cref="E:Resco.Controls.SmartGrid.SmartGrid.CustomizeCell"/> event.</remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Cell.BorderColor">
            <summary>
            Gets or sets the color for the inner border of the cell.
            </summary>
            <remarks>This property should be set <see cref="E:Resco.Controls.SmartGrid.SmartGrid.CustomizeCell"/> event.</remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Cell.BorderWidth">
            <summary>
            Gets or sets the width for the inner border of the cell.
            </summary>
            <remarks>This property should be set <see cref="E:Resco.Controls.SmartGrid.SmartGrid.CustomizeCell"/> event.</remarks>
        </member>
        <member name="T:Resco.Controls.SmartGrid.CustomCell">
            <summary>
            CustomCell is derived from <see cref="T:Resco.Controls.SmartGrid.Cell"/> and is used to customize contents drawn by the cell.
            </summary>
            <remarks>CustomCell is used by the <see cref="E:Resco.Controls.SmartGrid.SmartGrid.CustomizeCell"/> event to allow customizable 
            cell <see cref="P:Resco.Controls.SmartGrid.CustomCell.Text"/>, <see cref="P:Resco.Controls.SmartGrid.CustomCell.Image"/> and <see cref="P:Resco.Controls.SmartGrid.CustomCell.Style"/>.</remarks>
        </member>
        <member name="M:Resco.Controls.SmartGrid.CustomCell.#ctor(Resco.Controls.SmartGrid.Cell)">
            <summary>
            Creates the custom cell from the template cell.
            </summary>
            <param name="cell">Template cell that is copied to custom cell.</param>
        </member>
        <member name="P:Resco.Controls.SmartGrid.CustomCell.Text">
            <summary>
            Gets or sets the text displayed by the cell.
            </summary>
            <remarks>If no value or <see langword="null"/> is set as a custom <c>Text</c>, the default text is displayed. 
            </remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.CustomCell.Image">
            <summary>
            Gets or sets the <see cref="P:Resco.Controls.SmartGrid.CustomCell.Image"/> for the cell to display.
            </summary>
            <remarks>If no value or <see langword="null"/> is set as a custom <c>Image</c>, the default Image is displayed. 
            </remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.CustomCell.Style">
            <summary>
            Gets or sets the <see cref="T:Resco.Controls.SmartGrid.Style"/> used to display the cell.
            </summary>
            <remarks>If no value or <see langword="null"/> is set as a custom <c>Style</c>, the default style is used. 
            </remarks>
        </member>
        <member name="T:Resco.Controls.SmartGrid.RowHeaderCell">
            <summary>
            Special cells for drawing row headers.
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.CheckBoxCell">
            <summary>
            CheckBoxCell is derived from <see cref="T:Resco.Controls.SmartGrid.Cell"/> and is used to draw CheckBoxes in the column. These
            cells are created automatically by SmartGrid if <see cref="P:Resco.Controls.SmartGrid.Column.CellEdit"/> property of a
            <see cref="T:Resco.Controls.SmartGrid.Column"/> is set to <see cref="T:Resco.Controls.SmartGrid.CellEditType"/>.CheckBox.
            <remarks>
            All the cells in SmartGrid are recreated upon every repaint of SmartGrid. If you change any propeties of
            a CheckBoxCell object, these changes will be discarded
            </remarks>
            </summary>
        </member>
        <member name="M:Resco.Controls.SmartGrid.CheckBoxCell.GetCheckBoxImage(System.Drawing.Image,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Returns a colored checkbox image with specified fore color and back color.
            </summary>
            <param name="original">The original black and white image.</param>
            <param name="foreColor">The color of the check and the frame.</param>
            <param name="backColor">The background color.</param>
            <returns></returns>
        </member>
        <member name="P:Resco.Controls.SmartGrid.CheckBoxCell.Checked">
            <summary>
            Gets a value indicating if this CheckBox is checked.
            </summary>
            <remarks>
            <value>true</value>, if CheckBox is checked,
            <value>false1</value>, otherwise.
            </remarks>
        </member>
        <member name="T:Resco.Controls.SmartGrid.RowCollection">
            <summary>
            RowCollection contains the rows of the SmartGrid.
            </summary>
            <remarks>
            <p>The <see cref="P:Resco.Controls.SmartGrid.RowCollection.HeaderRow"/> property gives access to column header row 
            containing the column names.</p>
            <p>To change the height of the rows and update parent SmartGrid, 
            use method <see cref="M:Resco.Controls.SmartGrid.RowCollection.SetHeight(System.Int32,System.Int32)"/>.</p>
            <p>You can <see cref="M:Resco.Controls.SmartGrid.RowCollection.Add(Resco.Controls.SmartGrid.Row)"/> or <see cref="M:Resco.Controls.SmartGrid.RowCollection.Remove(Resco.Controls.SmartGrid.Row)"/> rows to or from collection.
            To get the index of the row, use <see cref="M:Resco.Controls.SmartGrid.RowCollection.IndexOf(Resco.Controls.SmartGrid.Row)"/> method.</p>
            </remarks>
        </member>
        <member name="M:Resco.Controls.SmartGrid.RowCollection.GetNextVisibleRowIndex(System.Int32,System.Int32)">
            <summary>
            Starts looking for a row that has greater index than 'nIndex' and that is visible. If such row does
            not exist, returns -1.
            </summary>
            <param name="nIndex">Index of a row to start search from.</param>
            <param name="expectedRows">Expected rows, default -1.</param>
            <returns>Index of the next visible row.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.RowCollection.GetPreviousVisibleRowIndex(System.Int32)">
            <summary>
            Starts looking for a row that has lower index than 'nIndex' and that is visible. If such row does
            not exist, returns -1.
            </summary>
            <param name="nIndex">Index of a row to start search from.</param>
            <returns>Index of the previous visible row.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.RowCollection.IsDockedRow(System.Int32)">
            <summary>
            Says whether a row at provided index is docked.
            </summary>
            <param name="nIndex">Index of a row that should be determined.</param>
            <returns>True, if the row is docked, false otherwise.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.RowCollection.SetHeight(System.Int32,System.Int32)">
            <summary>
            Sets the height of the given row.
            </summary>
            <remarks>Setting <see cref="P:Resco.Controls.SmartGrid.Row.Height"/> does not update parent SmartGrid. 
            This can be accomplished by using <c>SetHeight</c> method instead. 
            To set height of the header row, use <see cref="P:Resco.Controls.SmartGrid.SmartGrid.ColumnHeaderHeight"/> property.</remarks>
            <param name="index">Index of the row.</param>
            <param name="height">New height of the row.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.RowCollection.SetHeight(System.Int32)">
            <summary>
            Sets the height of all rows.
            </summary>
            <remarks>Use this overload to set the same height for all rows.</remarks>
            <param name="height">New height of the row.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.RowCollection.Add(Resco.Controls.SmartGrid.Row)">
            <summary>
            Adds a row to the RowCollection.
            </summary>
            <param name="row"><see cref="T:Resco.Controls.SmartGrid.Row"/> to add.</param>
            <returns>The position into which the new row was inserted.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.RowCollection.Remove(Resco.Controls.SmartGrid.Row)">
            <summary>
            Removes the first occurrence of a specific row from the RowCollection.
            </summary>
            <param name="row"><see cref="T:Resco.Controls.SmartGrid.Row"/> to remove.</param>
            <example>
            
            </example>
        </member>
        <member name="M:Resco.Controls.SmartGrid.RowCollection.IndexOf(Resco.Controls.SmartGrid.Row)">
            <summary>
            Determines the index of a specific row in the RowCollection.
            </summary>
            <param name="row">The <see cref="T:Resco.Controls.SmartGrid.Row"/> to locate in the RowCollection.</param>
            <returns>The index of <paramref name="row"/> if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.RowCollection.Insert(System.Int32,Resco.Controls.SmartGrid.Row)">
            <summary>
            Inserts a row into the RowCollection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="row"/> should be inserted. </param>
            <param name="row">The <see cref="T:Resco.Controls.SmartGrid.Row"/> to insert.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.RowCollection.OnClearComplete">
            <summary>
            Performs additional custom processes after clearing the contents of the CollectionBase instance.
            </summary>
            <remarks>Updates parent SmartGrid.</remarks>
        </member>
        <member name="M:Resco.Controls.SmartGrid.RowCollection.GetVisibleRowsUpTo(System.Int32)">
            <summary>
            Get the amount of rows which index is smaller than provided index and which are visible.
            </summary>
            <param name="index">Index of a row to search up to.</param>
            <returns>The amount of rows which are visible and which index is smaller than 'index'.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.RowCollection.GetVisibleRowsUpFrom(System.Int32)">
            <summary>
            Gets the amount of rows which index is greater than provided index and wich are visible.
            </summary>
            <param name="index">Index of a row to search up from.</param>
            <returns>The amount of rows which are visible and which index is greater than 'index'.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.RowCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after inserting a new element into the CollectionBase instance.
            </summary>
            <remarks>Updates parent SmartGrid.</remarks>
            <param name="index">The zero-based index at which to insert value.</param>
            <param name="value">The new value of the element at index.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.RowCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after removing an element from the CollectionBase instance.
            </summary>
            <remarks>Updates parent SmartGrid.</remarks>
            <param name="index">The zero-based index at which value can be found.</param>
            <param name="value">The value of the element to remove from index.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.RowCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            Performs additional custom processes after setting a value in the CollectionBase instance.
            </summary>
            <remarks>Updates parent SmartGrid.</remarks>
            <param name="index">The zero-based index at which <paramref name="oldValue"/> can be found.</param>
            <param name="oldValue">The value to replace with <paramref name="newValue"/>.</param>
            <param name="newValue">The new value of the element at <paramref name="index"/>.</param>
        </member>
        <member name="P:Resco.Controls.SmartGrid.RowCollection.HeaderRow">
            <summary>
            Gets the reference to the header row.
            </summary>
            <remarks>The header row is the one containing column names. 
            Header row is displayed when <see cref="P:Resco.Controls.SmartGrid.SmartGrid.ColumnHeadersVisible"/> is set to true.
            The height of the header row is controled by the 
            <see cref="P:Resco.Controls.SmartGrid.SmartGrid.ColumnHeaderHeight"/> property.</remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.RowCollection.Item(System.Int32)">
            <summary>
            Gets or sets the row at the specified index. 
            </summary>
            <param name="index">The zero-based index of the row to get or set.</param>
            <value>The row at the specified index.</value>
        </member>
        <member name="T:Resco.Controls.SmartGrid.Column">
            <summary>
            Represents a column in the Smartgrid.
            </summary>
            <remarks>
            <p>SmartGrid control is column oriented, and Column class provides specific informations required 
            to display the column of data.</p>
            <p>Column has adjustable <see cref="P:Resco.Controls.SmartGrid.Column.Width"/> that can be also changed by user in drag-drop manner, 
            if column header is displayed. Column header displays a <see cref="P:Resco.Controls.SmartGrid.Column.HeaderText"/> 
            of the specific column. <see cref="P:Resco.Controls.SmartGrid.Column.Alignment"/> is used as a default text and image alignment but 
            it is possible to override it using specific Style for column cells. It is possible to hide right
            border line of the column by setting <see cref="P:Resco.Controls.SmartGrid.Column.GridLine"/> property to <c>false</c>.</p>
            <p><see cref="P:Resco.Controls.SmartGrid.Column.DataMember"/> property of the column can be used to select which data to display 
            in the column. If no DataMember is selected, data to display are chosen according to <see cref="P:Resco.Controls.SmartGrid.Column.Index"/>
            of the column. It is also possible to display images from given <see cref="P:Resco.Controls.SmartGrid.Column.ImageList"/> 
            by setting <see cref="P:Resco.Controls.SmartGrid.Column.ImageMember"/> to choose image index.</p>
            <p>It is possible to customize styles used to display data in the column by setting custom
            <see cref="P:Resco.Controls.SmartGrid.Column.Style"/>, <see cref="P:Resco.Controls.SmartGrid.Column.AlternatingStyle"/>, <see cref="P:Resco.Controls.SmartGrid.Column.SelectionStyle"/> or <see cref="P:Resco.Controls.SmartGrid.Column.HeaderStyle"/>.
            Even further customisation is provided when setting <see cref="P:Resco.Controls.SmartGrid.Column.CustomizeCells"/> property to <c>true</c>. 
            Then it is possible to use <see cref="E:Resco.Controls.SmartGrid.SmartGrid.CustomizeCell"/> event to set custom style, text or image 
            for every cell in the column.</p>
            </remarks>
        </member>
        <member name="F:Resco.Controls.SmartGrid.Column.Parent">
            <summary>
            A reference to the parent SmartGrid.
            </summary>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Column.#ctor">
            <summary>
            Creates default column.
            </summary>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Column.#ctor(System.Int32,System.String,System.String)">
            <summary>
            Creates column with given width, header text and data member.
            </summary>
            <param name="width">Width of the column, default value is <see cref="F:Resco.Controls.SmartGrid.SmartGrid.DefaultColumnWidth"/>.</param>
            <param name="headerText">Header text for the column.</param>
            <param name="dataMember">Data member for the column.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Column.#ctor(Resco.Controls.SmartGrid.Column)">
            <summary>
            Creates a new column as a copy of the existing one.
            </summary>
            <param name="column"><see cref="T:Resco.Controls.SmartGrid.Column"/> to copy.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Column.ShouldSerializeCellEdit">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.SmartGrid.Column.CellEdit"/> property should be persisted. 
            </summary>
            <returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Column.ShouldSerializeEditMode">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.SmartGrid.Column.EditMode"/> property should be persisted.
            </summary>
            <returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Column.ShouldSerializeCellEditCustomControl">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.SmartGrid.Column.CellEditCustomControl"/> property should be persisted. 
            </summary>
            <returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Column.ShouldSerializeAutoSizeColumnMode">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.SmartGrid.Column.AutoSizeColumnMode"/> property should be persisted. 
            </summary>
            <returns><b>true</b> if the property value has changed from its default; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Column.ShouldSerializeImageList">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.SmartGrid.Column.ImageList"/> property should be persisted. 
            </summary>
            <returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Column.ShouldSerializeAlignment">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.SmartGrid.Column.Alignment"/> property should be persisted. 
            </summary>
            <returns>
            <b>true</b> if the property value has changed from its default; otherwise, <b>false</b>. 
            </returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Column.ToString">
            <summary>
            Converts the Column to string representation.
            </summary>
            <returns>The value of <see cref="P:Resco.Controls.SmartGrid.Column.HeaderText"/> property.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Column.Clone">
            <summary>
            Creates a copy of this column.
            </summary>
            <returns>Copy of this column.</returns>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Column.CellEdit">
            <summary>
            Gets or sets how will the editing of cells be handled.
            </summary>
            <remarks>
            <p>
            Use this property to set how will the editing of cells be handled. You have 4 choices:
            <ul>
            <li><see cref="T:Resco.Controls.SmartGrid.CellEditType"/>.None</li>
            <li><see cref="T:Resco.Controls.SmartGrid.CellEditType"/>.CheckBox</li>
            <li><see cref="T:Resco.Controls.SmartGrid.CellEditType"/>.TextBox</li>
            <li><see cref="T:Resco.Controls.SmartGrid.CellEditType"/>.Custom</li>
            </ul>
            </p>
            <p>
            If set to  <see cref="T:Resco.Controls.SmartGrid.CellEditType"/>.None a cell will only be selected after it was clicked.
            </p>
            <p>
            If set to <see cref="T:Resco.Controls.SmartGrid.CellEditType"/>.CheckBox, a cell will become a CheckBox. Its data will be converted
            to bool and according to the value of bool a check will be displayed or not. A <see cref="E:Resco.Controls.SmartGrid.SmartGrid.CheckBoxEdit"/>
            event will be fired after the cell is clicked. If this event is not handled the check 
            will just change its state to the opposite to what it was before.
            </p>
            <p>
            If set to <see cref="T:Resco.Controls.SmartGrid.CellEditType"/>.TextBox, a cell will become editable. A TextBox class control
            will be displayed over the cell and its data will be copied into this textbox. After the textbox
            loses focus (mostly because some other cell is clicked) a <see cref="E:Resco.Controls.SmartGrid.SmartGrid.TextBoxEdit"/> event will be fired.
            If you don't handle this event, the text property of the textbox will be copied
            into the cell. However you can further customize the editing of the cell by handling this event. 
            The arguments for this event are derived from CancelEventArgs class which means that you can
            cancel this event. In that case the changes made to the cell (in the textbox) will not be reflected
            back into the cell.
            </p>
            <p>
            If set to <see cref="T:Resco.Controls.SmartGrid.CellEditType"/>.Custom, you have to assign a Control derived class to
            <see cref="P:Resco.Controls.SmartGrid.Column.CellEditCustomControl"/> property of this column. Whenever a cell is clicked in this
            column,  a <see cref="E:Resco.Controls.SmartGrid.SmartGrid.BeforeCustomEdit"/> event will be fired and this custom control will be
            displayed to the user. After the custom control loses focus an <see cref="E:Resco.Controls.SmartGrid.SmartGrid.AfterCustomEdit"/>
            event will be fired. You should handle this event to reflect changes to the custom control
            back to the cell.
            </p>
            </remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Column.EditMode">
            <summary>
            Defines the behavior of editable cells for this column.
            The behavior also depends on <see cref="P:Resco.Controls.SmartGrid.Column.CellEdit"/> property of this column.
            </summary>
            <remarks>
            <p>
            If <see cref="P:Resco.Controls.SmartGrid.Column.CellEdit"/> property of this column is set to <see cref="T:Resco.Controls.SmartGrid.CellEditType"/>.None,
            this property is ignored.
            </p>
            <p>
            The following table explains the behavior of editable cells depending on the value of this 
            property and on the value of <see cref="P:Resco.Controls.SmartGrid.Column.CellEdit"/> property.
            <table>
            <tr>
            <td>EditMode/CellEdit</td><td>Checkbox</td><td>Textbox</td><td>Custom</td>
            </tr>
            <tr>
            <td>None</td><td>From code</td><td>From code</td><td>From code</td>
            </tr>
            <tr>
            <td>OnEnter</td><td>From code, By clicking, By Enter</td><td>From code, By clicking, By Enter</td>
            <td>From code, By clicking, By Enter</td>
            </tr>
            <tr>
            <td>Auto</td><td>From code, By clicking</td>
            <td>From code, By clicking, By keys, By cell activation</td>
            <td>From code, By clicking, By keys, By cell activation</td>
            </tr>
            </table>
            From code - means that editing can be invoked by calling <see cref="M:Resco.Controls.SmartGrid.SmartGrid.EditSelectedCell"/>.
            By clicking - means that editing can be invoked by clicking the mouse (stylus) on the cell.
            By enter - means that editing can be invoked by presssing enter key on the keyboard while the
            cell, that should be edited, is activated.
            By keys - means that editing can be invoked by activating the cell using the arrow keys on the 
            keyboard.
            By cell activation - means that editing can be invoked by calling <see cref="M:Resco.Controls.SmartGrid.SmartGrid.ActivateCell(System.Int32,System.Int32)"/>
            method.
            </p>
            </remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Column.CellEditCustomControl">
            <summary>
            Gets or sets the editing control for the column.
            </summary>
            <remarks>
            <p>
            This property is only relevant if  the <see cref="P:Resco.Controls.SmartGrid.Column.CellEdit"/> property
            is set to <see cref="F:Resco.Controls.SmartGrid.CellEditType.Custom"/> and is used for customization of editing of
            the cells.
            </p>
            <p>
            After setting <see cref="P:Resco.Controls.SmartGrid.Column.CellEdit"/> property to
            <see cref="F:Resco.Controls.SmartGrid.CellEditType.Custom"/> a Control class derived object has to be assigned
            to this property. Whenever a cell in this column is clicked  a <see cref="E:Resco.Controls.SmartGrid.SmartGrid.BeforeCustomEdit"/>
            event is raised and it is passed the <see cref="T:Resco.Controls.SmartGrid.CustomEditEventArgs"/> where a reference
            to the clicked cell and a reference to this custom control is passed. You should handle this event
            to process this custom control (e.g. format it with data from the cell). After the event handler
            finishes, the custom control will be displayed to the user over the clicked cell.
            </p>
            <p>
            As soon as SmartGrid is clicked, an <see cref="E:Resco.Controls.SmartGrid.SmartGrid.AfterCustomEdit"/> event is raised which is passed
            again the same <see cref="T:Resco.Controls.SmartGrid.CustomEditEventArgs"/>. You should handle this event to process the 
            information from the custom control and presumably reflect the changes back to the cell.
            </p>
            <p>
            <b>IMPORTANT:</b><br/>
            You must add this column to SmartGrid's Columns collection before setting this property, otherwise a
            NullReferenceException will be thrown.
            </p>
            </remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Column.Style">
            <summary>
            Gets or sets the style for the basic cells in the column.
            </summary>
            <remarks>Use this property to override default style for the normal rows.</remarks>
            <value>The name of the style.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Column.HeaderStyle">
            <summary>
            Gets or sets the style for the header cells in the column.
            </summary>
            <remarks>Use this property to override default style for the header row.</remarks>
            <value>The name of the header style.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Column.AlternatingStyle">
            <summary>
            Gets or sets the style for the alternating cells in the column.
            </summary>
            <remarks>Use this property to override default style for the alternating rows.</remarks>
            <value>The name of the alternating style.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Column.SelectionStyle">
            <summary>
            Gets or sets the style for the selected cells in the column.
            </summary>
            <remarks>Use this property to override default style for the selected rows.</remarks>
            <value>The name of the selection style.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Column.Width">
            <summary>
            Gets or sets the width of the column.
            </summary>
            <remarks>Changing the width of the column updates the parent SmartGrid.</remarks>
            <value>The width of the column.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Column.MinimumWidth">
            <summary>
            Gets or sets the minimum width, in pixels, of the column.
            </summary>
            <value>The number of pixels, from 2 to <see cref="F:System.Int32.MaxValue"/>, that specifies the minimum width of the column. 
            The default is 5.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Column.FillWeight">
            <summary>
            Gets or sets a value that represents the width of the column when it is in fill mode relative to the widths of other 
            fill-mode columns in the control.
            </summary>
            <value>A <see cref="T:System.Single"/> representing the width of the column when it is in fill mode relative to the widths of 
            other fill-mode columns. The default is 100.</value>
            <remarks>All fill-mode columns in the control divide the available space in proportions determined by their <b>FillWeight</b> property values.</remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Column.AutoSizeColumnMode">
            <summary>
            Gets or sets a value indicating how column width is determined.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Column.Alignment">
            <summary>
            Gets or sets the default alignment for the column.
            </summary>
            <remarks>The cell alignment is specified in style. The column alignment is used for text, images and checkboxes 
            (if it is a column with <see cref="P:Resco.Controls.SmartGrid.Column.CellEdit"/> property set to
            <see cref="T:Resco.Controls.SmartGrid.CellEditType"/>.CheckBox)
            when <see cref="P:Resco.Controls.SmartGrid.Style.TextAlignment"/> or <see cref="P:Resco.Controls.SmartGrid.Style.ImageAlignment"/> is <c>Alignment.Default</c>.</remarks>
            <value>The default <see cref="P:Resco.Controls.SmartGrid.Column.Alignment"/> of the column.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Column.HeaderText">
            <summary>
            Gets or sets the header text of the column.
            </summary>
            <remarks>Changing the header text updates the parent SmartGrid.</remarks>
            <value>The header text of the column.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Column.DataMember">
            <summary>
            Gets or sets the data member of the column.
            </summary>
            <remarks>When data member is set, it is used to lookup data in the <see cref="T:Resco.Controls.SmartGrid.Row"/>.
            When no data member is set, the column displays the data based on index of the column.</remarks>
            <value>The data member of the column.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Column.ImageMember">
            <summary>
            Gets or sets the image member of the column.
            </summary>
            <remarks>When image member is set, it is used to lookup image index in the <see cref="T:Resco.Controls.SmartGrid.Row"/>.
            When no image member is set, image index is based on <see cref="P:Resco.Controls.SmartGrid.Column.DataMember"/>.</remarks>
            <value>The image member of the column.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Column.ImageList">
            <summary>
            Gets or sets the image list for the column.
            </summary>
            <value><see cref="T:System.Windows.Forms.ImageList"/> that is used as a source of images for the column.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Column.CustomizeCells">
            <summary>
            Gets or sets the boolean value indicating whether cells can be customized in the column.
            </summary>
            <remarks>If <c>CustomizeCells</c> is set to true, then <see cref="E:Resco.Controls.SmartGrid.SmartGrid.CustomizeCell"/>
            event is called when creating cell cache to be displayed. Cells in such column are customizable, 
            i.e. Text, Image and Style can be changed for each cell independently.</remarks>
            <value><c>true</c> if cells can be customized, <c>false</c> otherwise.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Column.Index">
            <summary>
            Gets the index of the column in the parent's ColumnCollection.
            </summary>
            <value>The index of the column.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Column.GridLine">
            <summary>
            Gets or sets the boolean value indicating whether column gridline is displayed.
            </summary>
            <remarks>Column gridline is the vertical line on the right side of the column.</remarks>
            <value><c>true</c> if gridline is displayed, <c>false</c> otherwise.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Column.ToolTipClickWeight">
            <summary>
            Gets or sets a value that represents the width of the tooltip click area when it shows tooltip.
            </summary>
            <value>A <see cref="T:System.Single"/> representing the width of the tooltip click area when it shows tooltip relative to the width of 
            column. The default is -1.</value>
        </member>
        <member name="T:Resco.Controls.SmartGrid.EditMode">
            <summary>
            Defines the behavior of editable cells for a column.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.EditMode.None">
            <summary>
            The cell does not go into the edit mode, when it is activated.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.EditMode.OnEnter">
            <summary>
            The cell goes into the edit mode if it is selected and if the user presses the Enter key.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.EditMode.Auto">
            <summary>
            The cell goes into the edit mode automatically when it is selected.
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.Alignment">
            <summary>
            Defines the alignment of text, image or other content.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.Alignment.Default">
            <summary>
            Default alignment is taken from column.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.Alignment.TopLeft">
            <summary>
            Content is vertically aligned at the top, and horizontally aligned on the left.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.Alignment.MiddleLeft">
            <summary>
            Content is vertically aligned in the middle, and horizontally aligned on the left.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.Alignment.BottomLeft">
            <summary>
            Content is vertically aligned at the bottom, and horizontally aligned on the left.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.Alignment.TopCenter">
            <summary>
            Content is vertically aligned at the top, and horizontally aligned at the center.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.Alignment.MiddleCenter">
            <summary>
            Content is vertically aligned in the middle, and horizontally aligned at the center.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.Alignment.BottomCenter">
            <summary>
            Content is vertically aligned at the bottom, and horizontally aligned at the center.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.Alignment.TopRight">
            <summary>
            Content is vertically aligned at the top, and horizontally aligned on the right.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.Alignment.MiddleRight">
            <summary>
            Content is vertically aligned in the middle, and horizontally aligned on the right.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.Alignment.BottomRight">
            <summary>
            Content is vertically aligned at the bottom, and horizontally aligned on the right.
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.ImagePosition">
            <summary>
            Defines the position of the image in the <see cref="T:Resco.Controls.SmartGrid.Cell"/>.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.ImagePosition.None">
            <summary>
            No image is displayed.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.ImagePosition.Left">
            <summary>
            Image is displayed in the left part of the Cell.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.ImagePosition.Right">
            <summary>
            Image is displayed in the right part of the Cell.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.ImagePosition.Background">
            <summary>
            Image is displayed as a background of the Cell (bellow text).
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.ImagePosition.Foreground">
            <summary>
            Image is displayed as a foreground of the Cell (no text).
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.CellEditType">
            <summary>
            Defines the type of editing of cell after it was clicked
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.CellEditType.None">
            <summary>
            No editing will take place
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.CellEditType.TextBox">
            <summary>
            Editing will be managed by using a TextBox class
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.CellEditType.CheckBox">
            <summary>
            Editing will be managed by using a CheckBox class
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.CellEditType.Custom">
            <summary>
            Editing will be managed by using an arbitrary Control-derived class
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.CustomizeCellMode">
            <summary>
            Defines the behaviour of <see cref="E:Resco.Controls.SmartGrid.SmartGrid.CustomizeCell"/> event.
            </summary>
            <remarks>Default value is <b>Change</b>.</remarks>
        </member>
        <member name="F:Resco.Controls.SmartGrid.CustomizeCellMode.Create">
            <summary>
            <b>CustomizeCell</b> event will be fired on cell creation only.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.CustomizeCellMode.Change">
            <summary>
            <b>CustomizeCell</b> event will be fired on cell creation and cell change.
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.AutoSizeColumnsMode">
            <summary>
            Defines values for specifying how the widths of columns are adjusted.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.AutoSizeColumnsMode.None">
            <summary>
            The column widths do not automatically adjust. 
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.AutoSizeColumnsMode.ColumnHeader">
            <summary>
            The column widths adjust to fit the contents of the column header cells. 
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.AutoSizeColumnsMode.AllCellsExceptHeader">
            <summary>
            The column widths adjust to fit the contents of all cells in the columns, excluding header cells. 
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.AutoSizeColumnsMode.AllCells">
            <summary>
            The column widths adjust to fit the contents of all cells in the columns, including header cells. 
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.AutoSizeColumnsMode.DisplayedCellsExceptHeader">
            <summary>
            The column widths adjust to fit the contents of all cells in the columns that are in rows currently displayed onscreen, including header cells.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.AutoSizeColumnsMode.DisplayedCells">
            <summary>
            The column widths adjust to fit the contents of all cells in the columns that are in rows currently displayed onscreen, excluding header cells.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.AutoSizeColumnsMode.Fill">
            <summary>
            The column widths adjust so that the widths of all columns exactly fill the display area of the control, 
            requiring horizontal scrolling only to keep column widths above the <see cref="P:Resco.Controls.SmartGrid.Column.MinimumWidth"/> property values. 
            Relative column widths are determined by the relative <see cref="P:Resco.Controls.SmartGrid.Column.FillWeight"/> property values.
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.AutoSizeColumnMode">
            <summary>
            Defines values for specifying how the widths of columns are adjusted.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.AutoSizeColumnMode.NotSet">
            <summary>
            The sizing behavior of the column is inherited from the <see cref="P:Resco.Controls.SmartGrid.SmartGrid.AutoSizeColumnsMode"/> property.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.AutoSizeColumnMode.None">
            <summary>
            The column widths do not automatically adjust. 
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.AutoSizeColumnMode.ColumnHeader">
            <summary>
            The column widths adjust to fit the contents of the column header cells. 
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.AutoSizeColumnMode.AllCellsExceptHeader">
            <summary>
            The column widths adjust to fit the contents of all cells in the columns, excluding header cells. 
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.AutoSizeColumnMode.AllCells">
            <summary>
            The column widths adjust to fit the contents of all cells in the columns, including header cells. 
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.AutoSizeColumnMode.DisplayedCellsExceptHeader">
            <summary>
            The column widths adjust to fit the contents of all cells in the columns that are in rows currently displayed onscreen, excluding header cells.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.AutoSizeColumnMode.DisplayedCells">
            <summary>
            The column widths adjust to fit the contents of all cells in the columns that are in rows currently displayed onscreen, including header cells.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.AutoSizeColumnMode.Fill">
            <summary>
            The column widths adjust so that the widths of all columns exactly fill the display area of the control, 
            requiring horizontal scrolling only to keep column widths above the <see cref="P:Resco.Controls.SmartGrid.Column.MinimumWidth"/> property values. 
            Relative column widths are determined by the relative <see cref="P:Resco.Controls.SmartGrid.Column.FillWeight"/> property values.
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.AutoSizeRowsMode">
            <summary>
            Defines values for specifying how the widths of columns are adjusted.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.AutoSizeRowsMode.None">
            <summary>
            The row heights do not automatically adjust.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.AutoSizeRowsMode.HeaderRow">
            <summary>
            The header row height adjust to fit the contents of the header row cells. 
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.AutoSizeRowsMode.AllCellsExceptHeaderRow">
            <summary>
            The row heights adjust to fit the contents of all cells in the rows, excluding header row cells. 
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.AutoSizeRowsMode.AllCells">
            <summary>
            The row heights adjust to fit the contents of all cells in the rows, including header row cells.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.AutoSizeRowsMode.DisplayedCellsExceptHeaderRow">
            <summary>
            The row heights adjust to fit the contents of all cells in rows currently displayed onscreen, excluding header row cells.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.AutoSizeRowsMode.DisplayedCells">
            <summary>
            The row heights adjust to fit the contents of all cells in rows currently displayed onscreen, including header row cells.
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.AutoSizeRowMode">
            <summary>
            Defines values for specifying how the height of a row is adjusted. 
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.AutoSizeRowMode.NotSet">
            <summary>
            The sizing behavior of the row is inherited from the <see cref="P:Resco.Controls.SmartGrid.SmartGrid.AutoSizeRowsMode"/> property.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.AutoSizeRowMode.None">
            <summary>
            The row height do not automatically adjust. 
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.AutoSizeRowMode.AllCells">
            <summary>
            The row height adjusts to fit the contents of all cells in the row, including the header cell.
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.CustomizeCellEventArgs">
            <summary>
            Class containing arguments for <see cref="E:Resco.Controls.SmartGrid.SmartGrid.CustomizeCell"/> event.
            </summary>
            <remarks>Use the <see cref="P:Resco.Controls.SmartGrid.CustomizeCellEventArgs.Cell"/> property to customize the cell to be diplayed.</remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.CustomizeCellEventArgs.Cell">
            <summary>
            Gets or sets the cell that is going to be displayed by the SmartGrid.
            </summary>
            <remarks>
            <p>You can change the <see cref="P:Resco.Controls.SmartGrid.Cell.Text"/>, <see cref="P:Resco.Controls.SmartGrid.Cell.Image"/> and <see cref="P:Resco.Controls.SmartGrid.Cell.Style"/> of the cell
            you want to customize.</p>
            <p>For more advanced display, you can derive own cell type from <see cref="T:Resco.Controls.SmartGrid.Cell"/> overriding the <see cref="M:Resco.Controls.SmartGrid.Cell.Draw(System.Drawing.Graphics)"/> method. 
            Then you can set this property to set the own cell to be displayed in the grid.</p>
            </remarks>
        </member>
        <member name="T:Resco.Controls.SmartGrid.CellEventArgs">
            <summary>
            Class containing arguments for <see cref="E:Resco.Controls.SmartGrid.SmartGrid.CellClick"/> and <see cref="E:Resco.Controls.SmartGrid.SmartGrid.HeaderClick"/> events.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.CellEventArgs.Cell">
            <summary>
            Gets the cell that was clicked.
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.ColumnResizeEventArgs">
            <summary>
            Class containing arguments for <see cref="E:Resco.Controls.SmartGrid.SmartGrid.ColumnResize"/> event.
            </summary>
        </member>
        <member name="M:Resco.Controls.SmartGrid.ColumnResizeEventArgs.#ctor(Resco.Controls.SmartGrid.Column,System.Int32)">
            <summary>
            Constructor for this class.
            </summary>
            <param name="c">Reference to the column that was resized</param>
            <param name="nOldWidth">Width of the column that it had had before it was resized.</param>
        </member>
        <member name="P:Resco.Controls.SmartGrid.ColumnResizeEventArgs.Column">
            <summary>
            Gets the column that was resized.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.ColumnResizeEventArgs.OldWidth">
            <summary>
            Gets the width of column that it had had before it was resized.
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.RowResizeEventArgs">
            <summary>
            Class containing arguments for <see cref="E:Resco.Controls.SmartGrid.SmartGrid.RowResize"/> event.
            </summary>
        </member>
        <member name="M:Resco.Controls.SmartGrid.RowResizeEventArgs.#ctor(Resco.Controls.SmartGrid.Row,System.Int32)">
            <summary>
            Constructor for this class
            </summary>
            <param name="r">Reference to the row that was resized</param>
            <param name="nOldHeight">Height of the column that it had had before it was resized.</param>
        </member>
        <member name="P:Resco.Controls.SmartGrid.RowResizeEventArgs.Row">
            <summary>
            Gets the row that was resized.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.RowResizeEventArgs.OldHeight">
            <summary>
            Gets the height of row that it had had before it was resized.
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.ColumnDragEventArgs">
            <summary>
            Class containing arguments for <see cref="E:Resco.Controls.SmartGrid.SmartGrid.ColumnDrag"/> event.
            </summary>
        </member>
        <member name="M:Resco.Controls.SmartGrid.ColumnDragEventArgs.#ctor(Resco.Controls.SmartGrid.Column,System.Int32,System.Int32)">
            <summary>
            Constructor for this class.
            </summary>
            <param name="c">Reference to the column that was resized</param>
            <param name="nOldIndex">Index of the column that it had before it was draged.</param>
            <paparam name="nNewIndex">Index of the column that it have after it was draged.</paparam>
        </member>
        <member name="P:Resco.Controls.SmartGrid.ColumnDragEventArgs.Column">
            <summary>
            Gets the column that was resized.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.ColumnDragEventArgs.OldIndex">
            <summary>
            Gets the index of column that it had before it was draged.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.ColumnDragEventArgs.NewIndex">
            <summary>
            Gets the index of column that it have after it was draged.
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.ColumnsChangedEventArgs">
            <summary>
            Class containing arguments for <see cref="!:SmartGrid.ColumnsChanged"/> event.
            </summary>
        </member>
        <member name="M:Resco.Controls.SmartGrid.ColumnsChangedEventArgs.#ctor(Resco.Controls.SmartGrid.Column,System.Int32,Resco.Controls.SmartGrid.ChangeType)">
            <summary>
            Constructor for this class.
            </summary>
            <param name="c">Reference to the column that was changed.</param>
            <param name="nIdnex">Index of the column that was changed.</param>
            <paparam name="type">Type of change.</paparam>
        </member>
        <member name="P:Resco.Controls.SmartGrid.ColumnsChangedEventArgs.Column">
            <summary>
            Gets the column that was changed.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.ColumnsChangedEventArgs.Index">
            <summary>
            Gets the column index that was changed.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.ColumnsChangedEventArgs.Type">
            <summary>
            Gets the change type.
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.TextBoxEditEventArgs">
            <summary>
            Class containing arguments for <see cref="E:Resco.Controls.SmartGrid.SmartGrid.TextBoxEdit"/> event.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.TextBoxEditEventArgs.OldText">
            <summary>
            Gets the old text i.e. text that was previously in the cell.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.TextBoxEditEventArgs.NewText">
            <summary>
            Gets the new text i.e. text that was input into the TextBox.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.TextBoxEditEventArgs.Cell">
            <summary>
            Gets the cell that was edited
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.CheckBoxEditEventArgs">
            <summary>
            Class containing arguments for <see cref="E:Resco.Controls.SmartGrid.SmartGrid.CheckBoxEdit"/> event.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.CheckBoxEditEventArgs.OldState">
            <summary>
            Gets the old state of checkbox.
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.SelectionChangingEventArgs">
            <summary>
            Class containing arguments for <see cref="E:Resco.Controls.SmartGrid.SmartGrid.SelectionChanging"/> event.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SelectionChangingEventArgs.OldActiveRowIndex">
            <summary>
            Returns an index of a row that is now active.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SelectionChangingEventArgs.NewActiveRowIndex">
            <summary>
            Returns an index of a row that is going to be active.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SelectionChangingEventArgs.OldActiveColumnIndex">
            <summary>
            Returns an index of a column that is now active.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SelectionChangingEventArgs.NewActiveColumnIndex">
            <summary>
            Returns an index of a column that is going to be active.
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.CustomEditEventArgs">
            <summary>
            Class containing arguments for <see cref="E:Resco.Controls.SmartGrid.SmartGrid.BeforeCustomEdit"/> and
            <see cref="E:Resco.Controls.SmartGrid.SmartGrid.AfterCustomEdit"/>events.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.CustomEditEventArgs.Control">
            <summary>
            Gets the control that is used to edit the cell.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.CustomEditEventArgs.Cell">
            <summary>
            Gets the cell that is being edited.
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.RowAddingEventArgs">
            <summary>
            Represents arguments for <see cref="!:SmartGrid.RowAddingEventHandler"/> delegate.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.RowAddingEventArgs.Row">
            <summary>
            Sets a row that will be added into SmartGrid's RowColection.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.RowAddingEventArgs.RowIndex">
            <summary>
            Gets an index of a row that is about to be added.
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.SelectionChangingHandler">
            <summary>
            Delegate for the <see cref="E:Resco.Controls.SmartGrid.SmartGrid.SelectionChanging"/> event.
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.CellClickHandler">
            <summary>
            Delegate for the <see cref="E:Resco.Controls.SmartGrid.SmartGrid.CellClick"/> and <see cref="E:Resco.Controls.SmartGrid.SmartGrid.HeaderClick"/> events.
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.CustomizeCellHandler">
            <summary>
            Delegate for the <see cref="E:Resco.Controls.SmartGrid.SmartGrid.CustomizeCell"/> event.
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.ColumnResizeHandler">
            <summary>
            Delegate for the <see cref="E:Resco.Controls.SmartGrid.SmartGrid.ColumnResize"/> event.
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.RowResizeHandler">
            <summary>
            Delegate for the <see cref="E:Resco.Controls.SmartGrid.SmartGrid.RowResize"/> event.
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.ColumnDragHandler">
            <summary>
            Delegate for the <see cref="E:Resco.Controls.SmartGrid.SmartGrid.ColumnDrag"/> event.
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.TextBoxEditHandler">
            <summary>
            Delegate for the <see cref="E:Resco.Controls.SmartGrid.SmartGrid.TextBoxEdit"/> event.
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.CheckBoxEditHandler">
            <summary>
            Delegate for the <see cref="E:Resco.Controls.SmartGrid.SmartGrid.CheckBoxEdit"/> event.
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.CustomEditHandler">
            <summary>
            Delegate for the <see cref="E:Resco.Controls.SmartGrid.SmartGrid.BeforeCustomEdit"/> event and <see cref="E:Resco.Controls.SmartGrid.SmartGrid.AfterCustomEdit"/>.
            </summary>
        </member>
        <member name="T:Resco.Controls.SmartGrid.RowAddingEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Resco.Controls.SmartGrid.SmartGrid.RowAdding"/> event.
            </summary>
            <param name="sender">Object that raised the event i.e. SmartGrid.</param>
            <param name="e">Arguments of this event.</param>
        </member>
        <member name="T:Resco.Controls.SmartGrid.ScrollEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Resco.Controls.SmartGrid.SmartGrid.Scroll"/> event.
            </summary>
            <param name="sender">Object that raised the event i.e. SmartGrid.</param>
            <param name="e">Arguments of this event.</param>
        </member>
        <member name="T:Resco.Controls.SmartGrid.SmartGrid">
            <summary>
            Resco SmartGrid control.
            </summary>
            <remarks>
            <p>Resco SmartGrid control is designed for displaying your data in a stylish, colorful grid, 
            containing various images.</p>
            <p>The grid constists of cells that are created based on data defined in rows and layout
            defined in columns. <see cref="P:Resco.Controls.SmartGrid.SmartGrid.Cells"/> collection gives you access to every displayed 
            <see cref="T:Resco.Controls.SmartGrid.Cell"/>. Cell can give you access to its location, 
            row, column, style and data. It is possible to create customizable cells in specific columns 
            by setting <see cref="P:Resco.Controls.SmartGrid.Column.CustomizeCells"/> to true and handling the 
            <see cref="E:Resco.Controls.SmartGrid.SmartGrid.CustomizeCell"/> event. Cell can have four states: normal, alternating, selected and 
            header cell. Normal and alternating cells are basic cells in data rows according to row index.
            Cell become selected when it is clicked, or when <see cref="P:Resco.Controls.SmartGrid.SmartGrid.FullRowSelect"/> is <c>true</c> and
            cell is in selected row. Header cells are in row headers when <see cref="P:Resco.Controls.SmartGrid.SmartGrid.RowHeadersVisible"/> is <c>true</c>
            and in column headers when <see cref="P:Resco.Controls.SmartGrid.SmartGrid.ColumnHeadersVisible"/> is <c>true</c>.</p>
            <p><see cref="P:Resco.Controls.SmartGrid.SmartGrid.Rows"/> collection gives you access to <see cref="T:Resco.Controls.SmartGrid.Row"/>
            containing data to display in grid. The data can be filled in either using <see cref="P:Resco.Controls.SmartGrid.SmartGrid.DataSource"/>
            and standard databinding mechanism, or you can use optimised direct access to database using 
            <see cref="P:Resco.Controls.SmartGrid.SmartGrid.DbConnector"/> with <see cref="P:Resco.Controls.SmartGrid.SmartGrid.DelayLoad"/> option. Another possibility is to fill in the
            grid manualy by adding or inserting rows to rows collection. 
            </p>
            <p><see cref="P:Resco.Controls.SmartGrid.SmartGrid.Columns"/> collection gives you access to <see cref="T:Resco.Controls.SmartGrid.Column"/>
            containing definitions how to display specific column in grid. It is possible to specify 
            <see cref="P:Resco.Controls.SmartGrid.Column.ImageList"/> as a source of images for column. 
            You can also specify which custom styles to use for the specific column.</p>
            <p>Custom styles are stored in <see cref="P:Resco.Controls.SmartGrid.SmartGrid.Styles"/> collection. They are referenced by its name 
            and are used to override default values of colors, fonts, alignment and image positioning for
            the specific column and cell type.</p>
            <p>SmartGrid defines standard <see cref="P:Resco.Controls.SmartGrid.SmartGrid.Font"/>, <see cref="P:Resco.Controls.SmartGrid.SmartGrid.HeaderFont"/> and various colors used 
            to display cells and grid. To customize display you can use also properies <see cref="P:Resco.Controls.SmartGrid.SmartGrid.Border"/>, 
            <see cref="P:Resco.Controls.SmartGrid.SmartGrid.GridLines"/>, <see cref="P:Resco.Controls.SmartGrid.SmartGrid.ColumnHeadersVisible"/>, <see cref="P:Resco.Controls.SmartGrid.SmartGrid.ColumnHeaderHeight"/>,
            <see cref="P:Resco.Controls.SmartGrid.SmartGrid.RowHeadersVisible"/> and <see cref="P:Resco.Controls.SmartGrid.SmartGrid.RowHeaderWidth"/>.</p>
            <p>You can farther control behavior of SmartGrid using properties <see cref="P:Resco.Controls.SmartGrid.SmartGrid.AllowResize"/> and 
            <see cref="P:Resco.Controls.SmartGrid.SmartGrid.FullRowSelect"/>.</p>
            <p>The control can be scrolled either by user or programatically using <see cref="P:Resco.Controls.SmartGrid.SmartGrid.ScrollHPos"/>
            and <see cref="P:Resco.Controls.SmartGrid.SmartGrid.ScrollVPos"/> properties. Scrolling is discrete. <see cref="E:Resco.Controls.SmartGrid.SmartGrid.Scroll"/> event
            is fired everytime contents are scrolled. You can dock specified number of rows and columns 
            (preventing to scroll them) by setting <see cref="P:Resco.Controls.SmartGrid.SmartGrid.DockedRows"/> and <see cref="P:Resco.Controls.SmartGrid.SmartGrid.DockedColumns"/> properties.</p>
            <p>The selection is controlled using <see cref="M:Resco.Controls.SmartGrid.SmartGrid.ActivateCell(Resco.Controls.SmartGrid.Cell)"/> method. When cell is activated
            and is not selected, then <see cref="E:Resco.Controls.SmartGrid.SmartGrid.SelectionChanged"/> event is fired and <see cref="P:Resco.Controls.SmartGrid.SmartGrid.ActiveRowIndex"/>
            and <see cref="P:Resco.Controls.SmartGrid.SmartGrid.ActiveColumnIndex"/> are updated.</p>
            <p>You can use method <see cref="M:Resco.Controls.SmartGrid.SmartGrid.LoadXml(System.String)"/> to load a saved XML templates of the grid. 
            To create the templates you can use Designer in Profesional edition of control or method 
            SaveXml on desktop.</p>
            </remarks>
            
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.DefaultScrollWidth">
            <summary>
            Gets or sets the default width of SmartGrid's scrollbars.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.DefaultColumnHeaderHeight">
            <summary>
            Gets the default height of SmartGrid's header row.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.DefaultRowHeaderWidth">
            <summary>
            Gets the default width of SmartGrid's header column.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.AutoColumns">
            <summary>
            Enable internal column generation from dataset.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.AutoColumnWidth">
            <summary>
            Automaticaly computes the column size.
            </summary>
            <remarks>Works only if <see cref="F:Resco.Controls.SmartGrid.SmartGrid.AutoColumns"/> is enabled. 
            The column size is computed to accomodate the <see cref="P:Resco.Controls.SmartGrid.Column.HeaderText"/>.</remarks>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.DefaultHeaderFont">
            <summary>
            Gets the default header font for this control.
            </summary>
            <remarks>The default header font is <c>Tahoma, 8pt, style=Bold</c></remarks>
            <value>The default header font of SmartGrid.</value>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.DefaultEditMode">
            <summary>
            Default edit mode.
            </summary>
            <remarks>Default edit mode for the columns if you leave EditMode to None at design time.</remarks>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.DefaultFont">
            <summary>
            Gets the default font for this control.
            </summary>
            <remarks>The default font is <c>Tahoma, 8pt</c></remarks>
            <value>The default font of SmartGrid.</value>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.DefaultForeColor">
            <summary>
            Gets or sets the default fore color for this control.
            </summary>
            <remarks>The default fore color is <c>SystemColors.WindowText</c></remarks>
            <value>The default fore color of SmartGrid.</value>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.DefaultBackColor">
            <summary>
            Gets or sets the default back color for this control.
            </summary>
            <remarks>The default back color is <c>SystemColors.Window</c></remarks>
            <value>The default back color of SmartGrid.</value>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.DefaultRowHeight">
            <summary>
            Gets or sets the default height of SmartGrid's rows.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.DefaultColumnWidth">
            <summary>
            Gets or sets the default width of SmartGrid's columns.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.DefaultColumnMinimumWidth">
            <summary>
            Gets or sets the default minimum width of SmartGrid's columns.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.DefaultTooltipWidth">
            <summary>
            Gets or sets default ToolTip trinagle width.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.AutoFocus">
            <summary>
            Gets or sets whether the SmartGrid will get focus after leaving edit control.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.m_tb">
            <summary>
            Internal TextBox control used for editing the cells
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.m_bIsInEditMode">
            <summary>
            Indicates whether SmartGrid is in edit mode (whether there is a cell being edited)
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.m_nEditedRow">
            <summary>
            Index of an edited row. -1 if there is no row being edited.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.m_nEditedColumn">
            <summary>
            Index of an edited column. -1 if there is no column being edited.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.m_bCancelingEdit">
            <summary>
            A flag that indicates whether current editing of a cell should be cancelled. This flag is used by
            ActivateCell(int, int) method which first sets it to false, then calls the EndEdit() method which
            in some cases fires the AfterCustomEdit event which can be cancelled. If it is cancelled, then
            this flag is set to true to inform ActiveCell(int, int) that the cell activation should be cancelled and
            in this case ActivateCell(int, int) simply returns.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.m_activeRowIndex">
            <summary>
            Remembers the currently active row index
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.m_activeColumnIndex">
            <summary>
            Remembers the currently active column index
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.m_iIsInit">
            <summary>
            Flag that indicates whether SmartGrid is in an intialization phase.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.m_nTopmostRowIndex">
            <summary>
            Remembers an index of a row that is the topmost of all visible undocked rows. Holds a value of -1
            if such row does not exist.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.m_dataSource">
            <summary>
            Holds SmartGrid's data source object (must be an IList or IListSource)
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.m_listManager">
            <summary>
            Reference to the CurrencyManager object - used for databinding
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.m_bDelayLoad">
            <summary>
            Sets the DelayLoad functionality on and off
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.m_scrollLastV">
            <summary>
            Remembers the last value of vertical scroll bar
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.m_nMyOwnScrollDifV">
            <summary>
            
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.m_bCountTopMostRowIndex">
            <summary>
            Indicates, whether TopMostRowIndex property needs to be recalculated before painting.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.m_headerVistaStyle">
            <summary>
            vista style
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.m_bIsPainted">
            <summary>
            Determines if the control is just being painted
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.m_nOldHeight">
            <summary>
            The previous values of this.Height and this.Width are stored here. These data members are updated
            in the OnResize method.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.m_nOldWidth">
            <summary>
            The previous values of this.Height and this.Width are stored here. These data members are updated
            in the OnResize method.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.m_iRepaintsNeeded">
            <summary>
            The amount of successive repaints required (should not be greater than 2).
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.m_bLayoutChanged">
            <summary>
            Determine whether the layout changed during validating the grid (column width or row height changed).
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.m_nRowsLoaded">
            <summary>
            The amount of rows that were loaded through data source,  if delay 
            load is truned on.
            </summary>
        </member>
        <member name="F:Resco.Controls.SmartGrid.SmartGrid.m_bManualDataLoading">
            <summary>
            Says whether SmartGrid should fire the <see cref="E:Resco.Controls.SmartGrid.SmartGrid.RowAdding"/> event whenever
            it needs to display more rows.
            </summary>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.#ctor">
            <summary>
            Creates new SmartGrid control.
            </summary>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.ShouldSerializeAutoSizeRowsMode">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.SmartGrid.SmartGrid.AutoSizeRowsMode"/> property should be persisted. 
            </summary>
            <returns><b>true</b> if the property value has changed from its default; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.ShouldSerializeAutoSizeColumnsMode">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.SmartGrid.SmartGrid.AutoSizeColumnsMode"/> property should be persisted. 
            </summary>
            <returns><b>true</b> if the property value has changed from its default; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.ShouldSerializeCustomizeCellMode">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.SmartGrid.SmartGrid.CustomizeCellMode"/> property should be persisted. 
            </summary>
            <returns><b>true</b> if the property value has changed from its default; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.Reload">
            <summary>
            Reloads the data with the DataConnector.
            </summary>
            <remarks>
            <p><c>Reload</c> method removes the rows and reloads them using DbConnector.</p>
            <p>Columns remain the same.</p>
            </remarks>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.LoadData(System.Boolean)">
            <summary>
            Loads the data with the data connector.
            </summary>
            <remarks>
            <p>Removes all existing rows from the SmartGrid.</p>
            </remarks>
            <example>
            <sample name="SmartGrid.Load">
        <code lang="Visual Basic"><![CDATA[
Dim myCommand As New System.Data.SqlServerCe.SqlCeCommand("SELECT * FROM customers")
Dim myConnection As New System.Data.SqlServerCe.SqlCeConnection(_
    "DataSource = \\My Documents\\Northwind.sdf")

Private Sub Form1_Load(ByVal sender As Object, ByVal e As System.EventArgs)    Handles MyBase.Load
    Try
        ' set up the command for the DbConnector (not required, if set in designer)
        myCommand.Connection = myConnection
        SmartGrid1.DbConnector.Command = myCommand

        ' load the data
        SmartGrid1.LoadData(False)

    Catch ex As System.Data.SqlServerCe.SqlCeException
        MessageBox.Show(ex.Message)
    End Try
End Sub
            ]]></code>
        <code lang="C#"><![CDATA[
SqlCeCommand myCommand = new SqlCeCommand("SELECT * FROM customers");
SqlCeConnection myConnection = new SqlCeConnection("DataSource = \\My Documents\\Northwind.sdf");
    
private void Form1_Load(object sender, System.EventArgs e)
{
    try
    {
        // set up the command for the DbConnector (not required, if set in designer)
        myCommand.Connection = myConnection;
        smartGrid1.DbConnector.Command = myCommand;

        // load the data
        smartGrid1.LoadData(false);
    }
    catch(SqlCeException ex)
    {
        MessageBox.Show(ex.Message);
    }
}        
            ]]></code>
    </sample>
            </example>
            <param name="bCreateColumns">If set to <c>true</c> creates set of default columns to display data.</param>
            <returns>The <see cref="T:Resco.Controls.SmartGrid.Mapping"/> of the loaded data rows.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.LoadDataManually">
            <summary>
            Fills SmartGrid's RowCollection by user provided Row objects.
            </summary>
            <remarks>
            You have to handle the <see cref="E:Resco.Controls.SmartGrid.SmartGrid.RowAdding"/> event, otherwise an InvalidOperationException
            will be thrown. In the handler, you must provide a <see cref="T:Resco.Controls.SmartGrid.Row"/> object that will be added into
            SmartGrid's RowCollection. 
            </remarks>
            <seealso cref="E:Resco.Controls.SmartGrid.SmartGrid.RowAdding"/>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.CloseConnector">
            <summary>
            Closes the data connector if it is still open.
            </summary>
            <remarks>Can be used when <see cref="P:Resco.Controls.SmartGrid.SmartGrid.DelayLoad"/> is set to close the connector (and associated connection if applicable).</remarks>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.OnColumnResize(Resco.Controls.SmartGrid.ColumnResizeEventArgs)">
            <summary>
            Fires the <see cref="E:Resco.Controls.SmartGrid.SmartGrid.ColumnResize"/> event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.OnRowResize(Resco.Controls.SmartGrid.RowResizeEventArgs)">
            <summary>
            Fires the <see cref="E:Resco.Controls.SmartGrid.SmartGrid.RowResize"/> event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.OnColumnDrag(Resco.Controls.SmartGrid.ColumnDragEventArgs)">
            <summary>
            Fires the <see cref="E:Resco.Controls.SmartGrid.SmartGrid.ColumnDrag"/> event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.OnScroll(Resco.Controls.SmartGrid.ScrollEventArgs)">
            <summary>
            Fires the <see cref="E:Resco.Controls.SmartGrid.SmartGrid.Scroll"/> event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.OnScrollVisibleChanged(Resco.Controls.SmartGrid.ScrollEventArgs)">
            <summary>
            Fires <see cref="E:Resco.Controls.SmartGrid.SmartGrid.ScrollVisibleChanged"/> event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.OnCustomizeCell(Resco.Controls.SmartGrid.CustomizeCellEventArgs)">
            <summary>
            Fires the <see cref="E:Resco.Controls.SmartGrid.SmartGrid.CustomizeCell"/> event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.OnRowAdding(Resco.Controls.SmartGrid.RowAddingEventArgs)">
            <summary>
            Fires the <see cref="E:Resco.Controls.SmartGrid.SmartGrid.RowAdding"/> event.
            </summary>
            <param name="e">Arguments for the event.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.OnTextBoxEdit(Resco.Controls.SmartGrid.TextBoxEditEventArgs)">
            <summary>
            Fires the <see cref="E:Resco.Controls.SmartGrid.SmartGrid.TextBoxEdit"/> event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.OnCheckBoxEdit(Resco.Controls.SmartGrid.CheckBoxEditEventArgs)">
            <summary>
            Fires the <see cref="E:Resco.Controls.SmartGrid.SmartGrid.CheckBoxEdit"/> event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.OnBeforeCustomEdit(Resco.Controls.SmartGrid.CustomEditEventArgs)">
            <summary>
            Fires the <see cref="E:Resco.Controls.SmartGrid.SmartGrid.BeforeCustomEdit"/> event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.OnAfterCustomEdit(Resco.Controls.SmartGrid.CustomEditEventArgs)">
            <summary>
            Fires the <see cref="E:Resco.Controls.SmartGrid.SmartGrid.AfterCustomEdit"/> event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.OnSelectionChanged(System.EventArgs)">
            <summary>
            Fires the <see cref="E:Resco.Controls.SmartGrid.SmartGrid.SelectionChanged"/> event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.OnSelectionChanging(Resco.Controls.SmartGrid.SelectionChangingEventArgs)">
            <summary>
            Fires the <see cref="E:Resco.Controls.SmartGrid.SmartGrid.SelectionChanging"/> event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.EditSelectedCell">
            <summary>
            Switches the currently selected cell into edit mode.
            </summary>
            <remarks>
            You can get the currently selected cell using the <see cref="P:Resco.Controls.SmartGrid.SmartGrid.SelectedCell"/>. The behavior
            of this method is dependant on the <see cref="P:Resco.Controls.SmartGrid.Column.CellEdit"/> property of the column that the cell
            belongs to. If that <see cref="P:Resco.Controls.SmartGrid.Column.CellEdit"/> property is set to:<br/>
            <ul>
            <li><strong>None</strong>, the method does nothing.</li>
            <li><strong>CheckBox</strong>, the method toggles the state of a checkbox.</li>
            <li><strong>TextBox</strong>, shows the <see cref="P:Resco.Controls.SmartGrid.SmartGrid.EditingTextBox"/>.</li>
            <li><strong>Custom</strong>, shows the custom control used to edit this cell.</li>
            </ul>
            </remarks>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.EndEdit">
            <summary>
            If there is a cell in edit mode in SmartGrid, turns the edit mode off.
            </summary>
            <returns>Return <b>true</b> if the edit was finished, otherwise <b>false</b>.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.ActivateCell(System.Int32,System.Int32)">
            <summary>
            Activates the cell at the given row and column index.
            </summary>
            <remarks>Calling this method simulates user clicking on given cell.</remarks>
            <param name="rowIndex">The index of the row.</param>
            <param name="columnIndex">The index of the column.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.GetDockedRowsHeight">
            <summary>
            Returns the height of the docked rows.
            </summary>
            <returns>The height of the docked rows.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.GetDockedColumnsWidth">
            <summary>
            Returns the width of the docked columns.
            </summary>
            <returns>The width of the docked columns.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.EnsureVisible(System.Int32,System.Int32)">
            <summary>
            Scroll the selected row and column into view.
            </summary>
            <param name="rowIndex">Index of the row that should be visible.</param>
            <param name="columnIndex">Index of the column that should be visible.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.OnClick(System.EventArgs)">
            <summary>
            Handles the Click event. 
            </summary>
            <remarks>The method sets <see cref="P:Resco.Controls.SmartGrid.SmartGrid.ActiveRowIndex"/> and <see cref="P:Resco.Controls.SmartGrid.SmartGrid.ActiveColumnIndex"/>.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.OnCellClick(Resco.Controls.SmartGrid.CellEventArgs)">
            <summary>
            Fires the <see cref="E:Resco.Controls.SmartGrid.SmartGrid.CellClick"/> event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.OnHeaderClick(Resco.Controls.SmartGrid.CellEventArgs)">
            <summary>
            Fires the <see cref="E:Resco.Controls.SmartGrid.SmartGrid.HeaderClick"/> event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the key navigation.
            </summary>
            <param name="e">Key event arguments.</param>
            <remarks>Internal keyboard navigation is only enabled by <see cref="P:Resco.Controls.SmartGrid.SmartGrid.KeyNavigation"/> field.
            Key events are processed only when the control has focus.</remarks>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseDown event.
            </summary>
            <remarks>Handles the drag/drop resizing of the rows and columns.</remarks>
            <param name="e">A MouseEventArgs containing the event data.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseMove event.
            </summary>
            <remarks>Handles the drag/drop resizing of the rows and columns.</remarks>
            <param name="e">A MouseEventArgs containing the event data.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseUp event.
            </summary>
            <remarks>Handles the drag/drop resizing of the rows and columns and updates parent when done.</remarks>
            <param name="e">A MouseEventArgs containing the event data.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Handles the PaintBackground event.
            </summary>
            <param name="e">A PaintEventArgs containing the event data.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.LoadAdditionalRows(System.Int32)">
            <summary>
            Load specified additional amount of rows.
            </summary>
            <remarks>
            Method loads additional rows either from the 
            <see cref="P:Resco.Controls.SmartGrid.SmartGrid.DataSource"/> or from <see cref="P:Resco.Controls.SmartGrid.SmartGrid.DbConnector"/> - whichever
            was used to populate SmartGrid. The method is only relevant, if
            SmartGrid's <see cref="P:Resco.Controls.SmartGrid.SmartGrid.DelayLoad"/> is used. It forces SmartGrid to
            continue loading additional rows. The iAmount parameter specifies
            the maximum rows that will be loaded. If there are less than iAmount
            of rows left, method loads the remaining rows only.
            </remarks>
            <param name="iAmount">The amount of rows that should be loaded.</param>
            <returns>
            The amount of rows that were actually loaded. 0 indicates that there are no more rows to load.
            </returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Handles the Paint event.
            </summary>
            <remarks>Control uses double buffering to display data.</remarks>
            <param name="e">A PaintEventArgs containing the event data.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.OnResize(System.EventArgs)">
            <summary>
            Handles the Resize event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.GetCellAtPoint(System.Drawing.Point)">
            <summary>
            Gets the cell at defined point.
            </summary>
            <remarks>This function requires input point to be in client coordinates, i.e. relative to upper left corner of SmartGrid.</remarks>
            <param name="clientCoords">A <see cref="T:System.Drawing.Point"/> in client coordinates.</param>
            <returns>A <see cref="T:Resco.Controls.SmartGrid.Cell"/> displayed at the given or <see langref="null"/> if there is no cell.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.Refresh">
            <summary>
            Forces the control to redraw immediately.
            </summary>
            <remarks>Also updates the control's backbuffer.</remarks>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.DrawTextBox">
            <summary>
            Draws an editing TextBox over actually selected cell.
            </summary>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.CountTopmostRowIndex2">
            <summary>
            Change the TopMostRowIndex property so that it holds the index of that row which will be displayed as
            the topmost undocked. If such row does not exist, assign -1 to TopMostRowIndex.
            </summary>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.RecalculateTopmostRowIndex(System.Int32,System.Int32)">
            <summary>
            This method is called when DockedRows property changes, because it is necessary to recalculate the
            TopmostRowIndex property then.
            </summary>
            <param name="nOldDockedRows">The old value of docked rows.</param>
            <param name="nNewDockedRows">The new value of docked rows.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.UpdateLayout">
            <summary>
            Updates SmartGrid during the next Paint message
            </summary>
            <remarks>
            Causes SmartGrid to be completely repainted during the next Paint message, but does not send
            a paint message to its message queue. Compare to <see cref="M:Resco.Controls.SmartGrid.SmartGrid.Refresh"/> which also
            sends a paint message to SmartGrid and thus causes it to repaint itself immediately.
            </remarks>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.ShouldSerializeScrollVAlign">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.SmartGrid.SmartGrid.ScrollVAlign"/> property should be persisted. 
            </summary>
            <returns><b>true</b> if the property value has changed from its default; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.ResetScrollVAlign">
            <summary>
            Resets the <see cref="!:ScrollVPosition"/> property to its default value.
            </summary>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.GetLastVisibleRowsCount">
            <summary>
            Get the amount of rows from the end of RowCollection that fit the Client Area.
            </summary>
            <remarks>The algorithm first gets the height of the Client Area and remembers it in nBound.
            Then it iterates through the
            RowCollection starting from the last row and heading towards the first one. Each iteration decreases
            the nBound and increases the nCount which remembers the amount of rows that fit into the client area.
            As soon as nBound is smaller or equal to zero, algorithm finishes and returns nCount.
            </remarks>
            <returns>The amount of rows from the end of RowCollection that fit the Client Area.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.ShouldSerializeTouchScrollDirection">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.SmartGrid.SmartGrid.TouchScrollDirection"/> property should be persisted. 
            </summary>
            <returns><b>true</b> if the property value has changed from its default; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.ShouldSerializeDataSource">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.SmartGrid.SmartGrid.DataSource"/> property should be persisted. 
            </summary>
            <returns><b>true</b> if the property value has changed from its default; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.BeginInit">
            <summary>
            Disables control recalculation during the initialization.
            </summary>
            <remarks>
            <p>Use this method before filling the control manualy with data. It is automaticaly used during databinding.</p>
            <p>After BeginInit call, control is not updated and the scrollbars are not recomputed. 
            To reenable control update, use <see cref="M:Resco.Controls.SmartGrid.SmartGrid.EndInit"/> method.</p>
            </remarks>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.EndInit">
            <summary>
            Enables control recalculation after the initialization.
            </summary>
            <remarks>
            <p>Use this method after finishing control updates after <see cref="M:Resco.Controls.SmartGrid.SmartGrid.BeginInit"/> call.</p>
            </remarks>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.OnBindingContextChanged(System.EventArgs)">
            <summary>
            Handles the changes of binding context.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.AutoResizeColumns">
            <summary>
            Adjusts the width of all columns using the specified <see cref="P:Resco.Controls.SmartGrid.SmartGrid.AutoSizeColumnsMode"/> mode.
            </summary>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.AutoResizeColumns(Resco.Controls.SmartGrid.AutoSizeColumnsMode)">
            <summary>
            Adjusts the width of all columns using the specified size mode.
            </summary>
            <param name="autoSizeColumnsMode">One of the <see cref="P:Resco.Controls.SmartGrid.SmartGrid.AutoSizeColumnsMode"/> values.</param>
            <remarks>This method is useful if you want to control when columns resize. The column widths are adjusted only once per 
            method call; if the contents of the columns later change, the columns will not automatically adjust. To resize a specific 
            column, use the <see cref="M:Resco.Controls.SmartGrid.SmartGrid.AutoResizeColumn(System.Int32,Resco.Controls.SmartGrid.AutoSizeColumnMode)"/> method. To set the columns to automatically resize whenever their 
            contents change, use the <see cref="P:Resco.Controls.SmartGrid.SmartGrid.AutoSizeColumnsMode"/> property or the column <see cref="!:Column.AutoSizeMode"/> property.</remarks>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.AutoResizeColumn(System.Int32,Resco.Controls.SmartGrid.AutoSizeColumnMode)">
            <summary>
            Adjusts the width of the specified column using the specified size mode.
            </summary>
            <param name="columnIndex">The index of the column to resize.</param>
            <param name="autoSizeColumnMode">One of the <see cref="T:Resco.Controls.SmartGrid.AutoSizeColumnMode"/> values.</param>
            <remarks>This method is useful if you want to control when a column resizes. The column width is adjusted only once 
            per method call; if the contents of the column later change, the column will not automatically adjust. To resize all 
            columns, use the <see cref="M:Resco.Controls.SmartGrid.SmartGrid.AutoResizeColumns"/> method. To set the column to automatically resize whenever its contents 
            change, use the <see cref="P:Resco.Controls.SmartGrid.SmartGrid.AutoSizeColumnsMode"/> property or the column <see cref="!:Column.AutoSizeMode"/> property.</remarks>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.AutoResizeRows">
            <summary>
            Adjusts the height of all rows using the specified <see cref="P:Resco.Controls.SmartGrid.SmartGrid.AutoSizeRowsMode"/> mode.
            </summary>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.AutoResizeRows(Resco.Controls.SmartGrid.AutoSizeRowsMode)">
            <summary>
            Adjusts the heights of the rows using the specified size mode value.
            </summary>
            <param name="autoSizeRowsMode">One of the <see cref="P:Resco.Controls.SmartGrid.SmartGrid.AutoSizeRowsMode"/> values.</param>
            <remarks>This method is useful if you want to control when rows resize. The row heights are adjusted only once per 
            method call; if the contents of the rows later change, the rows will not automatically adjust. To resize a specific 
            row, use the <see cref="M:Resco.Controls.SmartGrid.SmartGrid.AutoResizeRow(System.Int32,Resco.Controls.SmartGrid.AutoSizeRowMode)"/> method. To set the rows to automatically resize whenever their 
            contents change, use the <see cref="P:Resco.Controls.SmartGrid.SmartGrid.AutoSizeRowsMode"/> property or the row <see cref="!:Row.AutoSizeMode"/> property.</remarks>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.AutoResizeRow(System.Int32,Resco.Controls.SmartGrid.AutoSizeRowMode)">
            <summary>
            Adjusts the height of the specified row using the specified size mode.
            </summary>
            <param name="rowIndex">The index of the row to resize.</param>
            <param name="autoSizeColumnMode">One of the <see cref="T:Resco.Controls.SmartGrid.AutoSizeRowMode"/> values.</param>
            <remarks>This method is useful if you want to control when a row resizes. The row height is adjusted only once 
            per method call; if the contents of the row later change, the row will not automatically adjust. To resize all 
            rows, use the <see cref="M:Resco.Controls.SmartGrid.SmartGrid.AutoResizeRows"/> method. To set the row to automatically resize whenever its contents 
            change, use the <see cref="P:Resco.Controls.SmartGrid.SmartGrid.AutoSizeRowsMode"/> property or the row <see cref="!:Row.AutoSizeMode"/> property.</remarks>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.LoadXml(System.String)">
            <summary>
            Load the control from the specified <paramref name="location"/>.
            </summary>
            <remarks>
            You can use filename or any other valid URI as the <paramref name="location"/>.
            The control properties are set and new styles and columns are loaded from the file created by 
            the <see cref="!:SaveXml"/> method. It is not recommended to change the file manualy.
            </remarks>
            <param name="location">Location where the XML representation of control is stored.</param>
            <example>
            The following sample demonstrates how to load the templates in the runtime:
            <sample name="SmartGrid.LoadXml">
        <code lang="Visual Basic"><![CDATA[
Public Sub New()
    MyBase.New()

    'This call is required by the Windows Form Designer.
    InitializeComponent()

    Me.SmartGrid1 = New Resco.Controls.SmartGrid1
    Me.SmartGrid1.LoadXml("\My Documents\Templates\frmCustomers.xml")
    Me.Controls.Add(Me.AdvancedList1)

End Sub
            ]]></code>
        <code lang="C#"><![CDATA[
public FormCustomers()
{
    //This call is required by the Windows Form Designer.
    InitializeComponent();

    this.smartGrid1 = new Resco.Controls.AdvancedList();
    this.smartGrid1.LoadXml("\\My Documents\\Templates\\frmCustomers.xml");
    this.Controls.Add(this.smartGrid1)
}
            ]]></code>
    </sample>
            </example>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.LoadXml(System.String,Resco.Controls.SmartGrid.SmartGrid.DesignTimeCallback)">
            <summary>
            Load the control from the specified <paramref name="location"/>.
            </summary>
            <remarks>You can use filename or any other valid URI as the <paramref name="location"/>.The control properties are set and new templates are loaded from the file created by the <see cref="!:SaveXml"/> method. It is not recommended to change the file manualy.</remarks>
            <param name="location">Location where the XML representation of control is stored.</param>
            <param name="dtc">Reserved for design-time support.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.SmartGrid.LoadXml(System.Xml.XmlReader)">
            <summary>
            Load the control from the specified  <paramref name="reader"/>.
            </summary>
            <remarks>The control properties are set and new templates are loaded from the file created by the <see cref="!:SaveXml"/> method. It is not recommended to change the file manualy.</remarks>
            <param name="reader"><see cref="T:System.Xml.XmlReader"/> with the control parameters.</param>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.RowHeight">
            <summary>
            Gets or sets the height of SmartGrid's rows.
            </summary>
            <remarks>
            This property is also used, if data is loaded either using
            <see cref="P:Resco.Controls.SmartGrid.SmartGrid.DbConnector"/>, <see cref="P:Resco.Controls.SmartGrid.SmartGrid.DataSource"/> property or using Visual
            Studio's designer.
            </remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.AutoSizeRowsMode">
            <summary>
            Gets or sets a value indicating how row heights are determined.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.KeyNavigation">
            <summary>
            Enable internal keyboard navigation.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.AutoFocusOnClick">
            <summary>
            Gets or sets whether the SmartGrid will get focus on <see cref="!:Click"/> event.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.EditingTextBox">
            <summary>
            Gets the editing TextBox control that SmartGrid uses internally to edit those cells, that belong
            to the column that has <see cref="P:Resco.Controls.SmartGrid.Column.CellEdit"/> property set to <see cref="T:Resco.Controls.SmartGrid.CellEditType"/>.TextBox.
            </summary>
            <remarks>
            Note that there is always only one istance of a TextBox control in SmartGrid that is shared among all
            the TextBox-editable columns.
            </remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.RowHeaderWidth">
            <summary>
            Gets or sets the width of the rowheader column.
            </summary>
            <remarks>Rowheader column is the leftmost column visible if <see cref="P:Resco.Controls.SmartGrid.SmartGrid.RowHeadersVisible"/>
            is set to <c>true</c>. Rowheader displays which row is active row.</remarks>
            <value>The width of the rowheader column.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.ColumnHeaderHeight">
            <summary>
            Gets or sets the height of the columnheader row.
            </summary>
            <remarks>Columnheader row is the topmost column visible if <see cref="P:Resco.Controls.SmartGrid.SmartGrid.ColumnHeadersVisible"/>
            is set to <c>true</c>. Columnheader row displays column headers as defined by 
            <see cref="P:Resco.Controls.SmartGrid.Column.HeaderText"/>. Changing this property updates SmartGrid.</remarks>
            <value>The height of the columnheader row.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.DbConnector">
            <summary>
            Gets the <see cref="T:Resco.Controls.SmartGrid.DataConnector"/> which is defaultly used to load the data.
            </summary>
            <value>The <see cref="T:Resco.Controls.SmartGrid.DataConnector"/> which is defaultly used to load the data.</value>
            <remarks>
            <p>By default, the DbConnector is used to connect to SqlServerCe database. If command text
            or connection string is set, new SqlCeCommand and SqlCeConnection, or the 
            <see cref="P:Resco.Controls.SmartGrid.DataConnector.Command"/> property is accessed, the command is created within 
            the connector. If you want to use other type of access (e.g. Sql direct), you must create 
            the object with the <see cref="T:System.Data.IDbCommand"/> interface (SqlCommand) with the Connection set.
            </p>
            <p>DbConnector exposes property <see cref="P:Resco.Controls.SmartGrid.DataConnector.Command"/>, which can be used to 
            manipulate with the command. It is exposed only as <see cref="T:System.Data.IDbCommand"/>, so you have
            to convert the type to used command (e.g. SqlCeCommand) or use just 
            the <see cref="T:System.Data.IDbCommand"/> properties and methods. This is suitable for e.g. setting existing
            open connection to command, or manipulating the parameters of the command (see example).
            </p>
            </remarks>
            <seealso cref="T:Resco.Controls.SmartGrid.DataConnector"/>
            <example>
            This example shows the advanced usage of the DbConnector:
            <!-- No matching elements were found for the following include tag --><include file="Samples.xml" path="//sample[@name=&quot;DbConnectorParameters&quot;]"/>
            </example>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.DockedColumns">
            <summary>
            Gets or sets the number of docked columns.
            </summary>
            <remarks>Docked columns are not scrolled and remain in view.</remarks>
            <value>The number of docked columns.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.DockedRows">
            <summary>
            Gets or sets the number of docked rows.
            </summary>
            <remarks>Docked rows are not scrolled and remain in view.</remarks>
            <value>The number of docked rows.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.Styles">
            <summary>
            Gets the style collection of SmartGrid.
            </summary>
            <value><see cref="T:Resco.Controls.SmartGrid.StyleCollection"/> containing the custom styles for SmartGrid.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.Columns">
            <summary>
            Gets the column collection of SmartGrid.
            </summary>
            <value><see cref="T:Resco.Controls.SmartGrid.ColumnCollection"/> containing the columns of the SmartGrid.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.Rows">
            <summary>
            Gets the row collection of SmartGrid.
            </summary>
            <value><see cref="T:Resco.Controls.SmartGrid.RowCollection"/> containing the rows of the SmartGrid.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.Cells">
            <summary>
            Gets the cell collection of SmartGrid.
            </summary>
            <remarks>Use this property to access directly cells drawn on screen on indirectly the hidden cells.</remarks>
            <value><see cref="T:Resco.Controls.SmartGrid.CellCollection"/> containing the cells of the SmartGrid.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.ColumnHeadersVisible">
            <summary>
            Gets or sets the boolean value indicating whether to display column headers.
            </summary>
            <value><c>true</c> if column headers are displayed, <c>false</c> otherwise.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.AutoSizeColumnsMode">
            <summary>
            Gets or sets a value indicating how column widths are determined.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.GridLines">
            <summary>
            Gets or sets the boolean value indicating whether to display row grid lines.
            </summary>
            <value><c>true</c> if row gridlines are displayed, <c>false</c> otherwise.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.AllowResize">
            <summary>
            Gets or sets the boolean value indicating whether user can resize columns and rows.
            </summary>
            <value><c>true</c> if columns and rows can be resized, <c>false</c> otherwise.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.AllowColumnDrag">
            <summary>
            Gets or sets the boolean value indicating whether user can drag columns.
            </summary>
            <value><c>true</c> if columns can be draged, <c>false</c> otherwise.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.Font">
            <summary>
            Gets or sets the default font of regular, alternating and selected cells.
            </summary>
            <remarks>Default font is <c>Tahoma, 8pt</c>.
            Default header font can be overriden by defining custom <see cref="T:Resco.Controls.SmartGrid.Style"/>.</remarks>
            <value>The <see cref="T:System.Drawing.Font"/> for displaying normal text.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.HeaderFont">
            <summary>
            Gets or sets the default font of header cells.
            </summary>
            <remarks>Default font is <c>Tahoma, 8pt, style=Bold</c>. 
            Default header font can be overriden by defining custom <see cref="T:Resco.Controls.SmartGrid.Style"/>.</remarks>
            <value>The <see cref="T:System.Drawing.Font"/> for displaying header text.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.RowHeadersVisible">
            <summary>
            Gets or sets the boolean value indicating whether to display row headers.
            </summary>
            <value><c>true</c> if row headers are displayed, otherwise <c>false</c>.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.RowHeaderAutoNumber">
            <summary>
            Gets or sets the boolean value indicating whether row headers displays row numbers.
            </summary>
            <value><c>true</c> if row headers display row numbers, otherwise <c>false</c>.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.BorderColor">
            <summary>
            Gets or sets the border color.
            </summary>
            <remarks>Default color is <c>Color.Black</c>.</remarks>
            <value>The <see cref="T:System.Drawing.Color"/> for displaying border of SmartGrid.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.BorderSize">
            <summary>
            Gets or sets the border size.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.BorderStyle">
            <summary>
            Gets or sets the border style of the control.
            </summary>
            <value>One of the <see cref="P:Resco.Controls.SmartGrid.SmartGrid.BorderStyle"/> values. The default is <see cref="!:BorderStyle.FixedSingle"/>.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.Border">
            <summary>
            Gets or sets the boolean value indicating whether to display border.
            </summary>
            <value><c>true</c> if border is displayed, <c>false</c> otherwise.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.FullRowSelect">
            <summary>
            Gets or sets the boolean value indicating whether to select full row or single cell only.
            </summary>
            <value><c>true</c> if full row is selected on click, <c>false</c> if only clicked cell is selected.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.FreeSpaceWidth">
            <summary>
            Gets or sets the integer value indicating how much scrollable space (how many pixels) there should
            be after the right edge of the grid. Some free space is recommended for the user to be able to
            enlarge the last column more comfortably.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.RightToLeft">
            <summary>
            Gets or sets a value indicating whether control's elements are aligned to support right-to-left locales.
            </summary>
            <value><b>true</b> to support right-to-left locales, otherwise <b>false</b>.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.ShowToolTips">
            <summary>
            Gets or sets the boolean value indicating whether to allow ToolTips 
            when the text of cell does not fit into cell.
            </summary>
            <value><b>true</b> to allow ToolTips, otherwise <b>false</b>.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.ToolTipType">
            <summary>
            Gets or sets how the ToolTip should be drawn in <see cref="!:TextCell"/>.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.TooltipForeColor">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Color"/> of the tooltip fore color.
            </summary>
            <value>The <see cref="T:System.Drawing.Color"/> of the tooltip fore color.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.TooltipBackColor">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Color"/> of the tooltip back color.
            </summary>
            <value>The <see cref="T:System.Drawing.Color"/> of the tooltip back color.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.CustomizeCellMode">
            <summary>
            Specifies the beviour of the <see cref="E:Resco.Controls.SmartGrid.SmartGrid.CustomizeCell"/> event.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.AlternatingBackColor">
            <summary>
            Gets or sets the default back color of alternating cells.
            </summary>
            <remarks>Default color is <c>SystemColors.Window</c>.
            Default color can be overriden by defining custom <see cref="T:Resco.Controls.SmartGrid.Style"/>.</remarks>
            <value>The <see cref="T:System.Drawing.Color"/> for displaying background of alternating cells.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.BackColor">
            <summary>
            Gets or sets the default back color of normal cells.
            </summary>
            <remarks>Default color is <c>SystemColors.Window</c>.
            Default color can be overriden by defining custom <see cref="T:Resco.Controls.SmartGrid.Style"/>.</remarks>
            <value>The <see cref="T:System.Drawing.Color"/> for displaying background of normal cells.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.HeaderBackColor">
            <summary>
            Gets or sets the default back color of header cells.
            </summary>
            <remarks>Default color is <c>SystemColors.Control</c>.
            Default color can be overriden by defining custom <see cref="T:Resco.Controls.SmartGrid.Style"/>.</remarks>
            <value>The <see cref="T:System.Drawing.Color"/> for displaying background of header cells.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.SelectionBackColor">
            <summary>
            Gets or sets the default back color of selected cells.
            </summary>
            <remarks>Default color is <c>SystemColors.Highlight</c>.
            Default color can be overriden by defining custom <see cref="T:Resco.Controls.SmartGrid.Style"/>.</remarks>
            <value>The <see cref="T:System.Drawing.Color"/> for displaying background of selected cells.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.AlternatingForeColor">
            <summary>
            Gets or sets the default foreground color of alternating cells.
            </summary>
            <remarks>Default color is <c>SystemColors.WindowText</c>.
            Default color can be overriden by defining custom <see cref="T:Resco.Controls.SmartGrid.Style"/>.</remarks>
            <value>The <see cref="T:System.Drawing.Color"/> for displaying text of alternating cells.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.ForeColor">
            <summary>
            Gets or sets the default foreground color of normal cells.
            </summary>
            <remarks>Default color is <c>SystemColors.WindowText</c>.
            Default color can be overriden by defining custom <see cref="T:Resco.Controls.SmartGrid.Style"/>.</remarks>
            <value>The <see cref="T:System.Drawing.Color"/> for displaying text of normal cells.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.HeaderForeColor">
            <summary>
            Gets or sets the default foreground color of header cells.
            </summary>
            <remarks>Default color is <c>SystemColors.ControlText</c>.
            Default color can be overriden by defining custom <see cref="T:Resco.Controls.SmartGrid.Style"/>.</remarks>
            <value>The <see cref="T:System.Drawing.Color"/> for displaying text of header cells.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.SelectionForeColor">
            <summary>
            Gets or sets the default foreground color of selected cells.
            </summary>
            <remarks>Default color is <c>SystemColors.HighlightText</c>.
            Default color can be overriden by defining custom <see cref="T:Resco.Controls.SmartGrid.Style"/>.</remarks>
            <value>The <see cref="T:System.Drawing.Color"/> for displaying text of selected cells.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.BackgroundColor">
            <summary>
            Gets or sets the default background color of SmartGrid.
            </summary>
            <remarks>Default color is <c>SystemColors.AppWorkspace</c>.</remarks>
            <value>The <see cref="T:System.Drawing.Color"/> for displaying background of SmartGrid.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.GridLineColor">
            <summary>
            Gets or sets the default gridline color of SmartGrid.
            </summary>
            <remarks>Default color is <c>Color.Gray</c>.</remarks>
            <value>The <see cref="T:System.Drawing.Color"/> for displaying gridlines of SmartGrid.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.HeaderGridLineColor">
            <summary>
            Gets or sets the default hedaer gridline color of SmartGrid.
            </summary>
            <remarks>Default color is <c>Color.Black</c>.</remarks>
            <value>The <see cref="T:System.Drawing.Color"/> for displaying header gridlines of SmartGrid.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.HeaderVistaStyle">
            <summary>
            Get or sets whether to use Vista-Style for the header.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.SelectionVistaStyle">
            <summary>
            Get or sets whether to use Vista-Style for the selection.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.DelayLoad">
            <summary>
            Gets or sets the delay load option.
            </summary>
            <value>true, if delay load is applied, false otherwise.</value>
            <remarks><p>If delay load is applied, only partial data are loaded from 
            DataConnector, and new data are added only if user scrolls the control.
            Otherwise all the data are loaded and DataConnector is closed. 
            The number of loaded data is determined by the page size.</p>
            <p>When DbConnector is open, setting the DelayLoad property to false
            will load the remaing data. To avoid it, use <see cref="M:Resco.Controls.SmartGrid.SmartGrid.CloseConnector"/> function.</p></remarks>
        </member>
        <member name="E:Resco.Controls.SmartGrid.SmartGrid.RowAdding">
            <summary>
            Occurs when a new Row should be provided for SmartGrid's RowCollection.
            </summary>
            <remarks>
            Once you call the <see cref="M:Resco.Controls.SmartGrid.SmartGrid.LoadDataManually"/> method, SmartGrid fires this event
            regularly for you to provide it a <see cref="T:Resco.Controls.SmartGrid.Row"/> object filled with data. The arguments for this event
            is derived from CancelEventArgs. You have to set the Cancel property in the event handler to true to stop
            loading more data.
            If <see cref="P:Resco.Controls.SmartGrid.SmartGrid.DelayLoad"/> is set to true, the event stops firing as soon as the rows
            fill up SmartGrid's client area. However, as soon as the user scrolls down to see more rows, 
            the event starts firing again for the user to provide additional <see cref="T:Resco.Controls.SmartGrid.Row"/> objects to be added
            into the RowCollection.
            </remarks>
            <seealso cref="M:Resco.Controls.SmartGrid.SmartGrid.LoadDataManually"/>
        </member>
        <member name="E:Resco.Controls.SmartGrid.SmartGrid.ColumnResize">
            <summary>
            Fires when a column is resized.
            </summary>
        </member>
        <member name="E:Resco.Controls.SmartGrid.SmartGrid.RowResize">
            <summary>
            Fires when a row is resized.
            </summary>
        </member>
        <member name="E:Resco.Controls.SmartGrid.SmartGrid.ColumnDrag">
            <summary>
            Fires when the column is draged.
            </summary>
        </member>
        <member name="E:Resco.Controls.SmartGrid.SmartGrid.Scroll">
            <summary>
            Fires when control is scrolled.
            </summary>
        </member>
        <member name="E:Resco.Controls.SmartGrid.SmartGrid.ScrollVisibleChanged">
            <summary>
            Fires when the ScrollBar visibility changes.
            </summary>
        </member>
        <member name="E:Resco.Controls.SmartGrid.SmartGrid.CustomizeCell">
            <summary>
            CustomizeCell event is used to allow more advanced cell customization.
            </summary>
            <remarks>
            <p>When SmartGrid is refreshed, it creates a cache of display cells. 
            This event allows you to modify these cells - to set new Text, Image or Style to cell,
            or to create custom derived cell to handle the drawing. 
            To allow this event for the given column, set <see cref="P:Resco.Controls.SmartGrid.Column.CustomizeCells"/> 
            to <c>true</c>.</p>
            <p>Arguments for this event are of type <see cref="T:Resco.Controls.SmartGrid.CustomizeCellEventArgs"/>.</p> 
            <p>For examples, see our "CustomCell" sample.</p>
            </remarks>
        </member>
        <member name="E:Resco.Controls.SmartGrid.SmartGrid.CellClick">
            <summary>
            CellClick event is fired when cell is clicked in SmartGrid.
            </summary>
            <remarks>
            <p>Arguments for this event are of type <see cref="T:Resco.Controls.SmartGrid.CellEventArgs"/>.</p> 
            <p>This event is fired when cell is not in HeaderRow or HeaderColumn.</p> 
            </remarks>
        </member>
        <member name="E:Resco.Controls.SmartGrid.SmartGrid.HeaderClick">
            <summary>
            HeaderClick event is fired when header cell is clicked in SmartGrid.
            </summary>
            <remarks>
            <p>Arguments for this event are of type <see cref="T:Resco.Controls.SmartGrid.CellEventArgs"/>.</p> 
            <p>This event is fired only when cell is in HeaderRow or HeaderColumn.</p> 
            </remarks>
        </member>
        <member name="E:Resco.Controls.SmartGrid.SmartGrid.TextBoxEdit">
            <summary>
            TextBoxEdit event is fired whenever a cell is clicked in the column that has a CellEdit property
            set to <see cref="T:Resco.Controls.SmartGrid.CellEditType"/>.TextBox.
            </summary>
            <remarks>
            <p>
            Argument for this event is of type <see cref="T:Resco.Controls.SmartGrid.TextBoxEditEventArgs"/>. It contains the old text
            value of the TextBox before it was clicked and  the new text value that is about to replace the old
            one. TextBoxEditEvetArgs is derived from <see cref="T:System.ComponentModel.CancelEventArgs"/> which
            makes it a cancelable event as well.
            </p>
            </remarks>
        </member>
        <member name="E:Resco.Controls.SmartGrid.SmartGrid.CheckBoxEdit">
            <summary>
            CheckBoxEdit event is fired whenever a cell is clicked in the column that has a CellEdit property
            set to <see cref="T:Resco.Controls.SmartGrid.CellEditType"/>.CheckBox.
            </summary>
            <remarks>
            <p>Argument for this event is of type <see cref="T:Resco.Controls.SmartGrid.CheckBoxEditEventArgs"/>. It contains the state
            of the CheckBox before it was clicked. The new state is always negation of the old state.
            </p>
            <p>Since CheckBoxEditEvetArgs is derived from <see cref="T:System.ComponentModel.CancelEventArgs"/>,
            this event can be cancelled. This can be useful if yo want to keep the old value in the cell</p>
            </remarks>
        </member>
        <member name="E:Resco.Controls.SmartGrid.SmartGrid.BeforeCustomEdit">
            <summary>
            BeforeCustomEdit event is fired whenever a cell is clicked in the column that has a CellEdit property
            set to <see cref="T:Resco.Controls.SmartGrid.CellEditType"/>.Custom.
            </summary>
            <remarks>
            <p>Argument for this event is of type <see cref="T:Resco.Controls.SmartGrid.CustomEditEventArgs"/>.  It contains a reference
            to the cell that was clicked and a reference to the control-derived object that will be used to edit
            the cell. You should handle this event to format this custom control (e.g. fill it with data from
            the cell). After the handler has run the custom control will be displayed to the user.</p>
            </remarks>
        </member>
        <member name="E:Resco.Controls.SmartGrid.SmartGrid.AfterCustomEdit">
            <summary>
            AfterCustomEdit event is fired whenever SmartGrid is clicked and a Custom control is displayed to
            the user.
            </summary>
            <remarks>
            <p>Argument for this event is of type <see cref="T:Resco.Controls.SmartGrid.CustomEditEventArgs"/>.  It contains a reference
            to the cell that is being edited by the custom control and a reference to this custom control. 
            You should handle this event to reflect user's changes of the custom control to the cell that
            is being edited by this custom control.</p>
            </remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.SelectedCell">
            <summary>
            Gets the selected cell.
            </summary>
            <remarks>Selected cell is derived from <see cref="P:Resco.Controls.SmartGrid.SmartGrid.ActiveRowIndex"/> and <see cref="P:Resco.Controls.SmartGrid.SmartGrid.ActiveColumnIndex"/>.</remarks>
            <value>The selected <see cref="T:Resco.Controls.SmartGrid.Cell"/> or <see langref="null"/> if none is selected.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.ActiveRowIndex">
            <summary>
            Gets or sets the active row index.
            </summary>
            <remarks>The active row index is the index of the last clicked row.</remarks>
            <value>The active row index.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.ActiveColumnIndex">
            <summary>
            Gets or sets the active column index.
            </summary>
            <remarks>The active column index is the index of the last clicked column.</remarks>
            <value>The active column index.</value>
        </member>
        <member name="E:Resco.Controls.SmartGrid.SmartGrid.SelectionChanged">
            <summary>
            Fires when <see cref="P:Resco.Controls.SmartGrid.SmartGrid.ActiveRowIndex"/> or <see cref="P:Resco.Controls.SmartGrid.SmartGrid.ActiveColumnIndex"/> changes.
            </summary>
        </member>
        <member name="E:Resco.Controls.SmartGrid.SmartGrid.SelectionChanging">
            <summary>
            Fires when <see cref="P:Resco.Controls.SmartGrid.SmartGrid.ActiveRowIndex"/> or <see cref="P:Resco.Controls.SmartGrid.SmartGrid.ActiveColumnIndex"/> is going to be changed.
            </summary>
            <remarks>Event is cancellable, to cancel selection, set <c>e.Cancel = true;</c></remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.Dirty">
            <summary>
            Gets the boolean value indicationg that control requires a recalculation of cells before redraw.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.ScrollWidth">
            <summary>
            Gets or sets the width of the vertical scrollbar.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.ScrollHeight">
            <summary>
            Gets or sets the height of the horizontal scrollbar.
            </summary>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.ScrollBars">
            <summary>
            Gets or sets which scroll bars should appear in a <see cref="T:Resco.Controls.SmartGrid.SmartGrid"/> control.
            </summary>
            <value>One of the <see cref="P:Resco.Controls.SmartGrid.SmartGrid.ScrollBars"/> enumeration values that indicates whether a <see cref="T:Resco.Controls.SmartGrid.SmartGrid"/> control appears 
            with no scroll bars, a horizontal scroll bar, a vertical scroll bar, or both. The default is <b>ScrollBars.Both</b>.</value>
            <remarks>If scroll bars is set to be visible, they will appear only when the SmartGrid does not fit into its size.</remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.ScrollVAlign">
            <summary>
            Gets or sets vertical scrollbar alignment.
            </summary>
            <value>One of the <see cref="T:Resco.Controls.SmartGrid.ScrollAlign"/> enumeration values that defines the vertical scrollbar alignment.</value>
            <remarks>Default value is <see cref="F:Resco.Controls.SmartGrid.ScrollAlign.Default"/> and alignment depends on <see cref="P:Resco.Controls.SmartGrid.SmartGrid.RightToLeft"/> property.</remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.ScrollVFullPage">
            <summary>
            Gets or sets scroll to full last page.
            </summary>
            <value><b>true</b> to scroll to full last page, otherwise <b>false</b>.</value>
            <remarks>If set to <b>true</b>, the last page will be shown with the empty space after last row to show the full last page.</remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.ScrollVLargeChange">
            <summary>
            Gets or sets a value to be added to or subtracted from the scrollbar <b>Value</b> property when the scroll box is moved a large distance.
            </summary>
            <value>A numeric value. The default value is 0.</value>
            <remarks>When the user clicks in the scroll bar track on either side of the scroll box, the <b>Value</b> property changes 
            according to the value set in the <b>ScrollVLargeChange</b> property. If the <b>ScrollVLargeChange</b> is equal or leser then zero, 
            the LargerChange is computed from the <see cref="!:SmartGrid.Height"/>.</remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.ScrollHVisible">
            <summary>
            Gets the boolean value indicating whether horizontal scrollbar is visible.
            </summary>
            <value><c>true</c> if horizontal scrollbar is visible, <c>false</c> otherwise.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.ScrollHPos">
            <summary>
            Gets or sets the horizontal scroll position.
            </summary>
            <remarks>The index of first visible of floating columns is calculated like:
            <c>ScrollHPos + DockedColumns</c>.</remarks>
            <value>The horizontal scroll position.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.ScrollVVisible">
            <summary>
            Gets the boolean value indicating whether vertical scrollbar is visible.
            </summary>
            <value><c>true</c> if vertical scrollbar is visible, <c>false</c> otherwise.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.ScrollVPos">
            <summary>
            Gets or sets the vertical scroll position.
            </summary>
            <remarks>The index of first visible of floating rows is calculated like:
            <c>ScrollVPos + DockedRows</c>.</remarks>
            <value>The vertical scroll position.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.TopmostRowIndex">
            <summary>
            Gets or sets the top most row index.
            </summary>
            <remarks>Gets or sets the first visible row including hidden rows. To gets or sets scroll offset, use <see cref="!:SrollVPos"/> property.</remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.SmartGrid.DataSource">
            <summary>
            Gets or sets the datasource of the SmartGrid.
            </summary>
            <remarks>It is possible to use any of the standard datasources of <see cref="T:System.Windows.Forms.DataGrid"/>.
            Setting the DataSource property removes all existing rows.</remarks>
            <value>The datasource of the SmartGrid.</value>
        </member>
        <member name="M:Resco.Controls.Conversion.ColorFromString(System.String)">
            <summary>
            Converts string representation of color to <see cref="T:System.Drawing.Color"/>.
            </summary>
            <remarks>The function searches first known colors, then system colors
            and then tries to convert the color from ARGB integer (hexadecimal).</remarks>
            <example>
            <p>Known colors: <c>Conversion.ColorFromString("Gray")</c></p>
            <p>System colors: <c>Conversion.ColorFromString("Control")</c></p>
            <p>ARGB value: <c>Conversion.ColorFromString("FF808080")</c></p>
            </example>
            <param name="sColor">String representation of color.</param>
            <returns><see cref="T:System.Drawing.Color"/> converted from string representation.</returns>
        </member>
        <member name="M:Resco.Controls.Conversion.RectangleFromString(System.String)">
            <summary>
            Converts string representation of rectangle to <see cref="T:System.Drawing.Rectangle"/>.
            </summary>
            <remarks>The function converts the comma separated values of X,Y,Width,Height.</remarks>
            <example>
            <p>Rectangle: <c>Conversion.ColorFromRectangle("0,0,50,16")</c></p>
            </example>
            <param name="sRect">String representation of rectangle.</param>
            <returns><see cref="T:System.Drawing.Rectangle"/> converted from string representation.</returns>
        </member>
        <member name="M:Resco.Controls.Conversion.FontFromString(System.String)">
            <summary>
            Converts string representation of font to <see cref="T:System.Drawing.Font"/>.
            </summary>
            <param name="sFont">String representation of font.</param>
            <returns><see cref="T:System.Drawing.Font"/> converted from string representation.</returns>
        </member>
        <member name="M:Resco.Controls.Conversion.EnumFromString(System.Type,System.String)">
            <summary>
            Converts string representation of enumeration values to <see cref="T:System.Enum"/>.
            </summary>
            <remarks>The function converts the string representing the value from the enumeration.</remarks>
            <note type="caution">On compact framework the flags are not supported.</note>
            <example>
            <p>Alignment: <c>Conversion.ColorFromRectangle(typeof(Resco.Controls.Alignment),"BottomLeft")</c></p>
            </example>
            <param name="sValue">String representation of rectangle.</param>
            <param name="enumType">Type of enumeration</param>
            <returns>Value of type <paramref name="enumType"/> converted from string representation.</returns>
        </member>
        <member name="M:Resco.Controls.Conversion.StringDataFromString(System.String)">
            <summary>
            Converts the data from the comma separated strings to string array. 
            </summary>
            <param name="sData">Comma separated strings.</param>
            <returns>Array of strings.</returns>
        </member>
        <member name="M:Resco.Controls.Conversion.SetProperty(System.Object,System.String,System.Object)">
            <summary>
            Sets the property of object.
            </summary>
            <remarks>Handles special types of properties: Colors, Rectangles and CellSource.</remarks>
            <param name="obj">Object to apply.</param>
            <param name="name">Name of the property.</param>
            <param name="value">New value of the property.</param>
        </member>
        <member name="T:Resco.Controls.SmartGrid.Style">
            <summary>
            Style contains the properties for displaying the various cells.
            </summary>
            <remarks><p>Each Style is determined by its <see cref="P:Resco.Controls.SmartGrid.Style.Name"/>, that should be unique.</p>
            <p>Style contains the informations required to display text and image by the cell. 
            What is displayed is controled using <see cref="P:Resco.Controls.SmartGrid.Style.ImagePosition"/> property.</p>
            <p><see cref="P:Resco.Controls.SmartGrid.Style.BackColor"/> determines the background color of the cell using this style.</p>
            <p><see cref="P:Resco.Controls.SmartGrid.Style.ForeColor"/> determines the <see cref="T:System.Drawing.Color"/> of the text and the text font 
            is given by the <see cref="P:Resco.Controls.SmartGrid.Style.Font"/> property. You can change the position of the text inside 
            the cell using <see cref="P:Resco.Controls.SmartGrid.Style.TextAlignment"/> property. <see cref="P:Resco.Controls.SmartGrid.Style.FormatString"/> is used to
            convert data to string of given format.
            </p>
            <p>You can change the position of the image inside the cell using <see cref="P:Resco.Controls.SmartGrid.Style.ImageAlignment"/> property.
            You can resize the image to fit the cell using <see cref="P:Resco.Controls.SmartGrid.Style.AutoResize"/> property.
            <see cref="P:Resco.Controls.SmartGrid.Style.TransparentColor"/> or <see cref="P:Resco.Controls.SmartGrid.Style.AutoTransparent"/> property determines which color 
            is transparent in the displayed image.</p>
            </remarks>
        </member>
        <member name="F:Resco.Controls.SmartGrid.Style.DefaultName">
            <summary>
            Default style name.
            </summary>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Style.#ctor">
            <summary>
            Creates new default style.
            </summary>
            <remarks>Use the various properties to customize the style.</remarks>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Style.#ctor(Resco.Controls.SmartGrid.Style)">
            <summary>
            Creates the copy of the given style.
            </summary>
            <param name="style">Style to copy.</param>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Style.Clone">
            <summary>
            Creates the copy of this style.
            </summary>
            <returns>The exact copy of this style.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Style.OnStyleChanged">
            <summary>
            Notifies the SmartGrid that the style has been changed. 
            </summary>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Style.ShouldSerializeImagePosition">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.SmartGrid.Style.ImagePosition"/> property should be persisted. 
            </summary>
            <returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Style.ShouldSerializeFont">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.SmartGrid.Style.Font"/> property should be persisted. 
            </summary>
            <returns>
            <b>true</b> if the property value has changed from its default; otherwise, <b>false</b>. 
            </returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Style.ShouldSerializeTextAlignment">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.SmartGrid.Style.TextAlignment"/> property should be persisted. 
            </summary>
            <returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Style.ShouldSerializeImageAlignment">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.SmartGrid.Style.ImageAlignment"/> property should be persisted. 
            </summary>
            <returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Resco.Controls.SmartGrid.Style.Format(System.Object)">
            <summary>
            Formats the data to display string.
            </summary>
            <remarks>Override this method, if more advanced formatting then that given by <see cref="P:Resco.Controls.SmartGrid.Style.FormatString"/> is required.
            You can set up derived style in <see cref="E:Resco.Controls.SmartGrid.SmartGrid.CustomizeCell"/> event.</remarks>
            <param name="data">Data to display.</param>
            <returns>Text to display.</returns>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Style.Name">
            <summary>
            Gets or sets the name of the style.
            </summary>
            <remarks><p>Each Style is determined by its <see cref="P:Resco.Controls.SmartGrid.Style.Name"/> in the <see cref="T:Resco.Controls.SmartGrid.StyleCollection"/>.
            The name of the style in this collection should be unique.</p>
            </remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Style.FormatString">
            <summary>
            Gets or sets the format string of the style.
            </summary>
            <remarks>
            <p><see cref="P:Resco.Controls.SmartGrid.Style.FormatString"/> is used to convert data to string of given format.</p>
            </remarks>
            <seealso cref="M:System.String.Format(System.String,System.Object)">String.Format</seealso>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Style.ImagePosition">
            <summary>
            Gets or sets the image position within the cell.
            </summary>
            <remarks>
            <p>This <see cref="T:Resco.Controls.SmartGrid.ImagePosition"/> controls what is displayed in the cell.</p>
            </remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Style.BackColor">
            <summary>
            Gets or sets the background color of the cell.
            </summary>
            <remarks>
            <p><see cref="P:Resco.Controls.SmartGrid.Style.BackColor"/> determines the background <see cref="T:System.Drawing.Color"/> of the cell using this style.</p>
            <p>If the value is set to <see cref="P:System.Drawing.Color.Transparent"/>, default color determined by the SmartGrid is used.</p>
            </remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Style.ForeColor">
            <summary>
            Gets or sets the text color of the cell.
            </summary>
            <remarks>
            <p><see cref="P:Resco.Controls.SmartGrid.Style.ForeColor"/> determines the <see cref="T:System.Drawing.Color"/> of the text in the cell using this style.</p>
            <p>If the value is set to <see cref="P:System.Drawing.Color.Transparent"/>, default color determined by the SmartGrid is used.</p>
            </remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Style.DisabledColor">
            <summary>
            Gets or sets the text color of the disabled cell.
            </summary>
            <remarks>
            <p><see cref="P:Resco.Controls.SmartGrid.Style.DisabledColor"/> determines the <see cref="T:System.Drawing.Color"/> of the text in the disabled cell using this style.</p>
            <p>If the value is set to <see cref="P:System.Drawing.Color.Transparent"/>, default color determined by the SmartGrid is used.</p>
            </remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Style.Font">
            <summary>
            Gets or sets the font of the cell.
            </summary>
            <remarks>
            <p><see cref="P:Resco.Controls.SmartGrid.Style.Font"/> determines the <see cref="T:System.Drawing.Font"/> used to display the text of the cell using this style.</p>
            </remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Style.TextAlignment">
            <summary>
            Gets or sets the text alignment of the cell.
            </summary>
            <remarks>If <c>Alignemnt.Default</c> is set as the TextAlignment, then the used alignment in the cell is determined by <see cref="P:Resco.Controls.SmartGrid.Column.Alignment"/></remarks>
            <value><see cref="T:Resco.Controls.SmartGrid.Alignment"/> of the text.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Style.TransparentColor">
            <summary>
            Gets or sets the transparent color for the Image displayed by the cell.
            </summary>
            <remarks>This property is ignored, if <see cref="P:Resco.Controls.SmartGrid.Style.AutoTransparent"/> is set to true.</remarks>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Style.AutoTransparent">
            <summary>
            Gets or sets the boolean value indicating whether transparent color of the Image is determined automatically.
            </summary>
            <remarks>If this property is set to true, <see cref="P:Resco.Controls.SmartGrid.Style.TransparentColor"/> property is ignored and transparent color
            will be the color of topleft pixel of the image.</remarks>
            <value><see langref="true"/> if transparent color of the Image is determined automatically.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Style.AutoResize">
            <summary>
            Gets or sets the boolean value indicating whether Image is automatically resized to fit the cell.
            </summary>
            <value><see langref="true"/> if Image is automatically resized to fit the cell.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Style.ImageAlignment">
            <summary>
            Gets or sets the image alignment of the cell.
            </summary>
            <remarks>If <c>Alignemnt.Default</c> is set as the ImageAlignment, then the used alignment in the cell is determined by <see cref="P:Resco.Controls.SmartGrid.Column.Alignment"/>
            This alignment is also used if a checkbox should be displayed in the column that this cell belongs to
            (The checkbox will be displayed if the column that this cell belongs to has <see cref="P:Resco.Controls.SmartGrid.Column.CellEdit"/>
            property set to <see cref="T:Resco.Controls.SmartGrid.CellEditType"/>.CheckBox.
            </remarks>
            <value><see cref="T:Resco.Controls.SmartGrid.Alignment"/> of the image.</value>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Style.CheckBoxBackColor">
            <summary>
            Gets or sets the BackColor of a CheckBox. This property is ignored, if <see cref="P:Resco.Controls.SmartGrid.Column.CellEdit"/>
            property does not equal to <see cref="T:Resco.Controls.SmartGrid.CellEditType"/>.CheckBox.
            </summary>
            <seealso cref="P:Resco.Controls.SmartGrid.Column.CellEdit"/>
            <seealso cref="T:Resco.Controls.SmartGrid.CellEditType"/>
        </member>
        <member name="P:Resco.Controls.SmartGrid.Style.CheckBoxForeColor">
            <summary>
            Gets or sets the ForeColor of a CheckBox. This property is ignored, if <see cref="P:Resco.Controls.SmartGrid.Column.CellEdit"/>
            property does not equal to <see cref="T:Resco.Controls.SmartGrid.CellEditType"/>.CheckBox.
            </summary>
            <seealso cref="P:Resco.Controls.SmartGrid.Column.CellEdit"/>
            <seealso cref="T:Resco.Controls.SmartGrid.CellEditType"/>
        </member>
    </members>
</doc>
